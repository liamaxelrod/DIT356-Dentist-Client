{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Appointments.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Appointments.vue","mtime":1672159496645},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBzZWxlY3RGaWthOiAnJywNCiAgICAgIGRpc3BsYXlUaW1lOiAnJywNCiAgICAgIG1xdHRfY2xpZW50OiBudWxsLA0KICAgICAgdmFsdWU6ICcnLA0KICAgICAgcmVjZWl2ZTogJycsDQogICAgICBjb250ZXh0OiAnJywNCiAgICAgIG5ld3M6ICdub25lJywNCiAgICAgIHN1YnNjcmlwdGlvbjogew0KICAgICAgICB0b3BpYzogJ2RlbnRpc3RpbW8vZGVudGlzdC1hcHBvaW50bWVudC9hbGwtYXBwb2ludG1lbnRzLWRheScsDQogICAgICAgIHFvczogMA0KICAgICAgfSwNCiAgICAgIHdvcmtUaW1lOiB7DQogICAgICAgIG1vbmRheTogJ21vbmRheScsDQogICAgICAgIHR1ZXNkYXk6ICd0dWVzZGF5JywNCiAgICAgICAgd2VkbmVzZGF5OiAnd2VkbmVzZGF5JywNCiAgICAgICAgdGh1cnNkYXk6ICd0aHVyc2RheScsDQogICAgICAgIGZyaWRheTogJ2ZyaWRheScsDQogICAgICAgIHNhdHVyZGF5OiAnc2F0dXJkYXknLA0KICAgICAgICBzdW5kYXk6ICdzdW5kYXknDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMubXF0dF9jbGllbnQgPSBteW1xdHQuY3JlYXRlQ2xpZW50KCkNCiAgICBjb25zdCBtc2dDYWxsYmFjayA9ICh0b3BpYywgbWVzc2FnZSkgPT4gew0KICAgICAgdGhpcy5yZWNlaXZlID0gbWVzc2FnZS50b1N0cmluZygpDQogICAgICB0aGlzLmNvbnRleHQgPSBtZXNzYWdlLnRvU3RyaW5nKCkNCiAgICAgIGNvbnNvbGUubG9nKHsgdG9waWM6IHRvcGljLCBtZXNzYWdlOiBtZXNzYWdlLnRvU3RyaW5nKCkgfSkNCiAgICB9DQogICAgdGhpcy5tcXR0X2NsaWVudC5vbignbWVzc2FnZScsIG1zZ0NhbGxiYWNrKQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ3N1YnNjcmliZScsICh0b3BpYykgPT4gew0KICAgICAgY29uc29sZS5sb2coJ1N1YnNjcmliZWQgdG9vOiAnLCB0b3BpYykNCiAgICB9KQ0KICAgIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0aW1vL2RlbnRpc3QtYXBwb2ludG1lbnQvYWxsLWFwcG9pbnRtZW50cy1kYXknLCB7IHFvczogMCB9LCAoZXJyb3IsIHJlcykgPT4gew0KICAgICAgaWYgKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciA9ICcsIGVycm9yKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5sb2coJ3JlcyA9ICcsIHJlcykNCiAgICAgIH0NCiAgICB9KQ0KICB9LA0KICAvKg0KRmV0Y2hpbmcgdGhlIGFwcG9pbnRtZW50cyBvZiBkZW50aXN0aWQgInh4eHgiLiBOZXh0IHN0ZXAgaXMgdG8gaW5jb3ByYXRlIGl0IHNvIGl0IGtub3dzIHdoYXQgZGVudGlzdCBpcyBsb2dnZWQgaW4gYW5kIHVzZXMgdGhhdCBkZW50aXN0DQogICovDQogIG1ldGhvZHM6IHsNCiAgICBnZXRWYWx1ZSgpIHsNCiAgICAgIHRoaXMuZGlzcGxheVRpbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2VsZWN0RmlrYScpLnZhbHVlDQogICAgfSwNCiAgICBhcHBvaW50bWVudHMoKSB7DQogICAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5zdHJpbmdpZnkoew0KICAgICAgICBkZW50aXN0aWQ6IDIsDQogICAgICAgIGRhdGU6IHRoaXMudmFsdWUNCiAgICAgIH0pDQogICAgICBjb25zdCB0b3BpYyA9ICdkZW50aXN0aW1vL2RlbnRpc3QtYXBwb2ludG1lbnQvZ2V0LWFsbC1hcHBvaW50bWVudHMtZGF5Jw0KICAgICAgY29uc3QgcW9zID0gMA0KICAgICAgdGhpcy5tcXR0X2NsaWVudC5wdWJsaXNoKHRvcGljLCBwYXlsb2FkLCBxb3MpDQogICAgfSwNCiAgICBjaGFuZ2VCcmVhaygpIHsNCiAgICAgIGNvbnNvbGUubG9nKCdkbyBzb21ldGhpbmcnKQ0KICAgICAgLy8gY29uc3QgcGF5bG9hZCA9ICd7ICJkZW50aXN0aWQiOiA2ODcxODE3NjMnICsgJywgImJyZWFrIjogJyArICciJyArIHRoaXMuZGlzcGxheVRpbWUgKyAnIicgKyAnIH0nDQogICAgICAvLyBjb25zdCB0b3BpYyA9ICdkZW50aXN0aW1vL2RlbnRpc3QtYXBwb2ludG1lbnQvY2hhbmdlLWJyZWFrJw0KICAgICAgLy8gY29uc3QgcW9zID0gMA0KICAgICAgLy8gdGhpcy5tcXR0X2NsaWVudC5wdWJsaXNoKHRvcGljLCBwYXlsb2FkLCBxb3MpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";AAwDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Appointments.vue","sourceRoot":"src/views","sourcesContent":["<template class=\"test\">\r\n  <div class=\"background\">\r\n    <div class=\"div1\">\r\n      <b-row>\r\n        <b-col md=\"auto\">\r\n          <!-- ADD INFORMATION IF THERE IS NO APPOINTMENT THAT DAY -->\r\n          <b-calendar v-model=\"value\" locale=\"en-EU\"></b-calendar>\r\n        </b-col>\r\n        <b-col>\r\n          <p>Value: <b>'{{ value }}'</b></p>\r\n        </b-col>\r\n      </b-row>\r\n      <p onchange=\"myFunction\" >| {{this.receive}} |</p>\r\n      <b class=\"btn btn-dark\" @click=\"appointments\" style= \"width: 17rem;\">Get appointments</b>\r\n      <div class=\"card border-info mb-3\" style=\"width: 17rem;\">\r\n        <div class=\"card-header text-info\">\r\n          Appointment information\r\n        </div>\r\n        <ul class=\"list-group list-group-flush text-info\">\r\n          <li class=\"list-group-item\">Client ID</li>\r\n          <li class=\"list-group-item\">Date</li>\r\n          <li class=\"list-group-item\">Time</li>\r\n        </ul>\r\n      </div>\r\n      <div class=\"card border-danger mb-3\" style=\"width: 17rem;\">\r\n        <div class=\"card-header text-danger\">\r\n          Cancel Appointment </div>\r\n        <ul class=\"list-group list-group-flush text-info\">\r\n          <input id=\"inputDate\" v-model=\"cancelDate\" placeholder=\"Date of appointment YYYY-MM-DD\"/>\r\n          <input id=\"inputTime\" v-model=\"cancelTime\" placeholder=\"Time of appointment 00:00\"/>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n    <div class=\"div2\">\r\n      <p class=\"text-center\" id=\"h1\"> working hours </p>\r\n      <p> Monday: {{ this.workTime.monday }} </p>\r\n      <p> Tuesday: {{ this.workTime.tuesday }}</p>\r\n      <p> Wednesday: {{ this.workTime.wednesday }}</p>\r\n      <p> Thursday: {{ this.workTime.thursday }}</p>\r\n      <p> Friday: {{ this.workTime.friday }}</p>\r\n      <p> Saturday: {{ this.workTime.saturday }}</p>\r\n      <p> Sunday: {{ this.workTime.sunday }}</p>\r\n      <select id=\"selectFika\" v-model='displayTime'>\r\n        <option selected>select time for fika break</option>\r\n        <option value=\"1\">1</option>\r\n        <option value=\"2\">2</option>\r\n        <option value=\"3\">3</option>\r\n      </select>\r\n      <h> selected time: { {{ this.displayTime }} } </h>\r\n      <p></p>\r\n      <button class=\"btn btn-primary\" id=\"buttonChangeBreak\" @click=\"changeBreak\">change fika break</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      selectFika: '',\r\n      displayTime: '',\r\n      mqtt_client: null,\r\n      value: '',\r\n      receive: '',\r\n      context: '',\r\n      news: 'none',\r\n      subscription: {\r\n        topic: 'dentistimo/dentist-appointment/all-appointments-day',\r\n        qos: 0\r\n      },\r\n      workTime: {\r\n        monday: 'monday',\r\n        tuesday: 'tuesday',\r\n        wednesday: 'wednesday',\r\n        thursday: 'thursday',\r\n        friday: 'friday',\r\n        saturday: 'saturday',\r\n        sunday: 'sunday'\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      this.context = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/dentist-appointment/all-appointments-day', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  /*\r\nFetching the appointments of dentistid \"xxxx\". Next step is to incoprate it so it knows what dentist is logged in and uses that dentist\r\n  */\r\n  methods: {\r\n    getValue() {\r\n      this.displayTime = document.getElementById('selectFika').value\r\n    },\r\n    appointments() {\r\n      const payload = JSON.stringify({\r\n        dentistid: 2,\r\n        date: this.value\r\n      })\r\n      const topic = 'dentistimo/dentist-appointment/get-all-appointments-day'\r\n      const qos = 0\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    changeBreak() {\r\n      console.log('do something')\r\n      // const payload = '{ \"dentistid\": 687181763' + ', \"break\": ' + '\"' + this.displayTime + '\"' + ' }'\r\n      // const topic = 'dentistimo/dentist-appointment/change-break'\r\n      // const qos = 0\r\n      // this.mqtt_client.publish(topic, payload, qos)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*\r\nChange so it covers 100% not PX\r\n*/\r\n.background {\r\n  display: flex;\r\n  /* height: 100%;\r\n  justify-content: center;\r\n  align-items: center; */\r\n  flex-direction: row;\r\n}\r\n\r\n.div1 {\r\n  /* background:white; */\r\n  height: 90%;\r\n  width: 50%;\r\n  padding: 20px;\r\n  /* border: 10px\r\n  solid rgb(0, 255, 106); */\r\n}\r\n\r\n.div2 {\r\n  /* background: white; */\r\n  height: 90%;\r\n  width: 50%;\r\n  padding: 20px;\r\n  /* border: 10px\r\n  solid rgb(221, 255, 0); */\r\n}\r\n#h1 {\r\n  float: center;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: right;\r\n  /* color: rgb(0, 255, 106); */\r\n}\r\ntextarea {\r\n  background-color:#80BAB2;\r\n}\r\n\r\n</style>\r\n"]}]}