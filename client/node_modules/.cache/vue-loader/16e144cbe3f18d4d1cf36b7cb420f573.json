{"remainingRequest":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\src\\views\\Login.vue","mtime":1672305156400},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944960953},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1671448801980}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtcXR0X2NsaWVudDogbnVsbCwNCiAgICAgIHJlY2VpdmU6ICcnLA0KICAgICAgcmVxdWVzdElEOiAnJywNCiAgICAgIHFvczogMCwNCiAgICAgIHRvcGljOiAnZGVudGlzdGltby9sb2dpbicsDQogICAgICBjaGFuZ2VFbWFpbFRleHQ6ICcnLA0KICAgICAgY2hhbmdlUGFzc3dvcmRUZXh0OiAnJywNCiAgICAgIHVuc3VjY2Vzc2Z1bDogJycNCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5tcXR0X2NsaWVudCA9IG15bXF0dC5jcmVhdGVDbGllbnQoKQ0KICAgIGNvbnN0IG1zZ0NhbGxiYWNrID0gKHRvcGljLCBtZXNzYWdlKSA9PiB7DQogICAgICB0aGlzLnJlY2VpdmUgPSBtZXNzYWdlLnRvU3RyaW5nKCkNCiAgICAgIGlmICh0b3BpYy5pbmNsdWRlcygnZXJyb3InKSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9IHRoaXMucmVjZWl2ZQ0KICAgICAgICBjb25zb2xlLmxvZygnZmFpbHVyZScpDQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zb2xlLmxvZygnc3VjY2VzcycpDQogICAgICAgIGNvbnNvbGUubG9nKHRoaXMucmVjZWl2ZSkNCiAgICAgIH0NCiAgICAgIC8vIGNvbnNvbGUubG9nKHsgdG9waWM6IHRvcGljLCBtZXNzYWdlOiBtZXNzYWdlLnRvU3RyaW5nKCkgfSkNCiAgICB9DQogICAgdGhpcy5tcXR0X2NsaWVudC5vbignbWVzc2FnZScsIG1zZ0NhbGxiYWNrKQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ3N1YnNjcmliZScsICh0b3BpYykgPT4gew0KICAgICAgY29uc29sZS5sb2coJ1N1YnNjcmliZWQgdG9vOiAnLCB0b3BpYykNCiAgICB9KQ0KICAgIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0aW1vL2xvZ2luJywgeyBxb3M6IDAgfSwgKGVycm9yLCByZXMpID0+IHsNCiAgICAgIGlmIChlcnJvcikgew0KICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgPSAnLCBlcnJvcikNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnNvbGUubG9nKCdyZXMgPSAnLCByZXMpDQogICAgICB9DQogICAgfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG1ha2VpZChuKSB7DQogICAgICBsZXQgdGV4dCA9ICcnDQogICAgICBjb25zdCBwb3NzaWJsZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OScNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7DQogICAgICAgIHRleHQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpDQogICAgICB9DQogICAgICByZXR1cm4gdGV4dA0KICAgIH0sDQogICAgY29udGFpbnNTcGVjaWFsQ2hhcnMoc3RyKSB7DQogICAgICBjb25zdCBzcGVjaWFsQ2hhcnMgPSAnW2AhQCMkJV4mKigpXystPVtde307XCc6IlxcfCwuPD4vP35dLycNCiAgICAgIHJldHVybiBzcGVjaWFsQ2hhcnMuc3BsaXQoJycpDQogICAgICAgIC5zb21lKChzcGVjaWFsQ2hhcikgPT4gc3RyLmluY2x1ZGVzKHNwZWNpYWxDaGFyKSkNCiAgICB9LA0KICAgIGNvbnRhaW5zTnVtYmVycyhzdHIpIHsNCiAgICAgIGNvbnN0IHNwZWNpYWxDaGFycyA9ICcxMjM0NTY3ODkwJw0KICAgICAgcmV0dXJuIHNwZWNpYWxDaGFycy5zcGxpdCgnJykNCiAgICAgICAgLnNvbWUoKHNwZWNpYWxDaGFyKSA9PiBzdHIuaW5jbHVkZXMoc3BlY2lhbENoYXIpKQ0KICAgIH0sDQogICAgY2hlY2tTdHJpbmdMZW5ndGgoc3RyKSB7DQogICAgICBpZiAoc3RyLmxlbmd0aCA+PSA4ICYmIHN0ci5sZW5ndGggPD0gMTYpIHsNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgY2hlY2tFbWFpbChzdHJpbmcpIHsNCiAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IHN0cmluZy5pbmNsdWRlcygnQCcpDQogICAgICBpZiAoY29uZGl0aW9uKSB7DQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCiAgICB9LA0KICAgIGNoZWNrUGFzc3dvcmQoKSB7DQogICAgICBjb25zdCByZXN1bHQxID0gdGhpcy5jb250YWluc1NwZWNpYWxDaGFycyh0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCkNCiAgICAgIGNvbnN0IHJlc3VsdDIgPSB0aGlzLmNvbnRhaW5zTnVtYmVycyh0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCkNCiAgICAgIGNvbnN0IHJlc3VsdDMgPSB0aGlzLmNoZWNrU3RyaW5nTGVuZ3RoKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgaWYgKHJlc3VsdDEgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIGEgc3BlY2lhbCBjaGFyYWN0ZXInDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIGlmIChyZXN1bHQyID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdwYXNzd29yZCBuZWVkcyBhIG51bWJlcicNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2UgaWYgKHJlc3VsdDMgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIHRvIGJlIGJldHdlZW4gOCBhbmQgMTYgY2hhcmFjdGVycycNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICcnDQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9DQogICAgfSwNCiAgICBsb2dpbigpIHsNCiAgICAgIGNvbnNvbGUubG9nKCdsb2dpbicpDQogICAgICBjb25zdCBjaGVjayA9IHRoaXMuY2hlY2tQYXNzd29yZCgpDQogICAgICBjb25zdCBjaGVjazIgPSB0aGlzLmNoZWNrRW1haWwodGhpcy5jaGFuZ2VFbWFpbFRleHQpDQogICAgICBpZiAoY2hlY2syID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdlbWFpbCBuZWVkcyB0byBjb250YWluIEAnDQogICAgICB9IGVsc2UgaWYgKGNoZWNrID09PSBmYWxzZSkgew0KICAgICAgICAvLyByZXNwb25zZXMgaW4gY2hlY2tQYXNzd29yZCgpDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnJlcXVlc3RJRCA9IHRoaXMubWFrZWlkKDEwKQ0KICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLnJlcXVlc3RJRCkNCiAgICAgICAgdGhpcy5tcXR0X2NsaWVudC5zdWJzY3JpYmUoJ2RlbnRpc3RpbW8vbG9naW4vJyArIHRoaXMucmVxdWVzdElELCB7IHFvczogMCB9LCAoZXJyb3IsIHJlcykgPT4gew0KICAgICAgICAgIGlmIChlcnJvcikgew0KICAgICAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yID0gJywgZXJyb3IpDQogICAgICAgICAgfQ0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnN1YnNjcmliZSgnZGVudGlzdGltby9sb2dpbi9lcnJvci8nICsgdGhpcy5yZXF1ZXN0SUQsIHsgcW9zOiAwIH0sIChlcnJvciwgcmVzKSA9PiB7DQogICAgICAgICAgaWYgKGVycm9yKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgPSAnLCBlcnJvcikNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICAgIGNvbnN0IHBheWxvYWQgPSBKU09OLnN0cmluZ2lmeSh7DQogICAgICAgICAgZW1haWw6IHRoaXMuY2hhbmdlRW1haWxUZXh0LA0KICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCwNCiAgICAgICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElEDQogICAgICAgIH0pDQogICAgICAgIGNvbnNvbGUubG9nKCdsb2dpbjInKQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnB1Ymxpc2godGhpcy50b3BpYywgcGF5bG9hZCwgdGhpcy5xb3MpDQogICAgICB9DQogICAgfSwNCiAgICByZWdpc3RlcigpIHsNCiAgICAgIC8vIG5vdCB3b3JraW5nDQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3JlZ2lzdGVyJykNCiAgICB9DQogIH0NCn0NCg0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAifile":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"center\">\r\n    <div class=\"warning\">\r\n      <p id=\"pop-up\">{{ this.unsuccessful }}</p>\r\n    </div>\r\n    <div class=\"inputAndButton\">\r\n      <input id=\"inputEmail\" v-model='changeEmailText' placeholder=\"enter new email\">\r\n      <P></P>\r\n      <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n      <P></P>\r\n      <button id=\"bittpnLogin\" @click=\"login\" class=\"btn btn-success btn-lg\">login</button>\r\n      <button id=\"bittpnRegister\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '',\r\n      requestID: '',\r\n      qos: 0,\r\n      topic: 'dentistimo/login',\r\n      changeEmailText: '',\r\n      changePasswordText: '',\r\n      unsuccessful: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      if (topic.includes('error')) {\r\n        this.unsuccessful = this.receive\r\n        console.log('failure')\r\n      } else {\r\n        console.log('success')\r\n        console.log(this.receive)\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/login', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    makeid(n) {\r\n      let text = ''\r\n      const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n      for (let i = 0; i < n; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n      }\r\n      return text\r\n    },\r\n    containsSpecialChars(str) {\r\n      const specialChars = '[`!@#$%^&*()_+-=[]{};\\':\"\\\\|,.<>/?~]/'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    containsNumbers(str) {\r\n      const specialChars = '1234567890'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    checkStringLength(str) {\r\n      if (str.length >= 8 && str.length <= 16) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkEmail(string) {\r\n      const condition = string.includes('@')\r\n      if (condition) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkPassword() {\r\n      const result1 = this.containsSpecialChars(this.changePasswordText)\r\n      const result2 = this.containsNumbers(this.changePasswordText)\r\n      const result3 = this.checkStringLength(this.changePasswordText)\r\n      if (result1 === false) {\r\n        this.unsuccessful = 'password needs a special character'\r\n        return false\r\n      } else if (result2 === false) {\r\n        this.unsuccessful = 'password needs a number'\r\n        return false\r\n      } else if (result3 === false) {\r\n        this.unsuccessful = 'password needs to be between 8 and 16 characters'\r\n        return false\r\n      } else {\r\n        this.unsuccessful = ''\r\n        return true\r\n      }\r\n    },\r\n    login() {\r\n      console.log('login')\r\n      const check = this.checkPassword()\r\n      const check2 = this.checkEmail(this.changeEmailText)\r\n      if (check2 === false) {\r\n        this.unsuccessful = 'email needs to contain @'\r\n      } else if (check === false) {\r\n        // responses in checkPassword()\r\n      } else {\r\n        this.requestID = this.makeid(10)\r\n        // console.log(this.requestID)\r\n        this.mqtt_client.subscribe('dentistimo/login/' + this.requestID, { qos: 0 }, (error, res) => {\r\n          if (error) {\r\n            console.log('error = ', error)\r\n          }\r\n        })\r\n        this.mqtt_client.subscribe('dentistimo/login/error/' + this.requestID, { qos: 0 }, (error, res) => {\r\n          if (error) {\r\n            console.log('error = ', error)\r\n          }\r\n        })\r\n        const payload = JSON.stringify({\r\n          email: this.changeEmailText,\r\n          password: this.changePasswordText,\r\n          requestId: this.requestID\r\n        })\r\n        console.log('login2')\r\n        this.mqtt_client.publish(this.topic, payload, this.qos)\r\n      }\r\n    },\r\n    register() {\r\n      // not working\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #80BAB2;\r\n}\r\n\r\n#bittpnRegister {\r\n  display: inline-block;\r\n  margin: 10px;\r\n}\r\n</style>\r\n"]}]}