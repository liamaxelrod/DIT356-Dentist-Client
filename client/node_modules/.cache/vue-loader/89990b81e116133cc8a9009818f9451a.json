{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue","mtime":1671565201917},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944875280},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1671560644596}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovLyBpbXBvcnQgQXBwIGZyb20gJy4uL0FwcC52dWUnDQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtcXR0X2NsaWVudDogbnVsbCwNCiAgICAgIHJlY2VpdmU6ICcnLA0KICAgICAgcW9zOiAwLA0KICAgICAgdG9waWM6ICdkZW50aXN0L2NsaWVudC9yZWdpc3RlcicsDQogICAgICB0b3BpYzI6ICd0ZXN0L2RlbnRpc3RDbGllbnQvcmVnaXN0ZXInLA0KICAgICAgY2hhbmdlRmlyc3ROYW1lVGV4dDogJycsDQogICAgICBjaGFuZ2VMYXN0TmFtZVRleHQ6ICcnLA0KICAgICAgY2hhbmdlUGFzc3dvcmRUZXh0OiAnJywNCiAgICAgIGNoYW5nZVNhbWVQYXNzd29yZFRleHQ6ICcnLA0KICAgICAgY2hhbmdlY29tcGFueVRleHQ6ICcnLA0KICAgICAgY2hhbmdlRW1haWxUZXh0OiAnJywNCiAgICAgIHVuc3VjY2Vzc2Z1bDogJycsDQogICAgICBzdWJzY3JpcHRpb246IHsNCiAgICAgICAgdG9waWM6ICd0ZXN0JywNCiAgICAgICAgcW9zOiAwDQogICAgICB9DQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMubXF0dF9jbGllbnQgPSBteW1xdHQuY3JlYXRlQ2xpZW50KCkNCiAgICBjb25zdCBtc2dDYWxsYmFjayA9ICh0b3BpYywgbWVzc2FnZSkgPT4gew0KICAgICAgdGhpcy5yZWNlaXZlID0gbWVzc2FnZS50b1N0cmluZygpDQogICAgICBjb25zb2xlLmxvZyh7IHRvcGljOiB0b3BpYywgbWVzc2FnZTogbWVzc2FnZS50b1N0cmluZygpIH0pDQogICAgfQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ21lc3NhZ2UnLCBtc2dDYWxsYmFjaykNCiAgICB0aGlzLm1xdHRfY2xpZW50Lm9uKCdzdWJzY3JpYmUnLCAodG9waWMpID0+IHsNCiAgICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpYmVkIHRvbzogJywgdG9waWMpDQogICAgfSkNCiAgICB0aGlzLm1xdHRfY2xpZW50LnN1YnNjcmliZSgnZGVudGlzdC9jbGllbnQvcmVnaXN0ZXInLCB7IHFvczogMCB9LCAoZXJyb3IsIHJlcykgPT4gew0KICAgICAgaWYgKGVycm9yKSB7DQogICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciA9ICcsIGVycm9yKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5sb2coJ3JlcyA9ICcsIHJlcykNCiAgICAgIH0NCiAgICB9KQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgY29udGFpbnNTcGVjaWFsQ2hhcnMoc3RyKSB7DQogICAgICBjb25zdCBzcGVjaWFsQ2hhcnMgPSAnW2AhQCMkJV4mKigpXystPVtde307XCc6IlxcfCwuPD4vP35dLycNCiAgICAgIHJldHVybiBzcGVjaWFsQ2hhcnMuc3BsaXQoJycpDQogICAgICAgIC5zb21lKChzcGVjaWFsQ2hhcikgPT4gc3RyLmluY2x1ZGVzKHNwZWNpYWxDaGFyKSkNCiAgICB9LA0KICAgIGNvbnRhaW5zTnVtYmVycyhzdHIpIHsNCiAgICAgIGNvbnN0IHNwZWNpYWxDaGFycyA9ICcxMjM0NTY3ODkwJw0KICAgICAgcmV0dXJuIHNwZWNpYWxDaGFycy5zcGxpdCgnJykNCiAgICAgICAgLnNvbWUoKHNwZWNpYWxDaGFyKSA9PiBzdHIuaW5jbHVkZXMoc3BlY2lhbENoYXIpKQ0KICAgIH0sDQogICAgY2hlY2tTdHJpbmdMZW5ndGgoc3RyKSB7DQogICAgICBpZiAoc3RyLmxlbmd0aCA+PSA4ICYmIHN0ci5sZW5ndGggPD0gMTYpIHsNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgY2hlY2tGb3JTYW1lUGFzc3dvcmRzKCkgew0KICAgICAgaWYgKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0ID09PSB0aGlzLmNoYW5nZVNhbWVQYXNzd29yZFRleHQpIHsNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgY2hlY2tQYXNzd29yZCgpIHsNCiAgICAgIGNvbnN0IHJlc3VsdDEgPSB0aGlzLmNvbnRhaW5zU3BlY2lhbENoYXJzKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgY29uc29sZS5sb2cocmVzdWx0MSkNCiAgICAgIGNvbnN0IHJlc3VsdDIgPSB0aGlzLmNvbnRhaW5zTnVtYmVycyh0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCkNCiAgICAgIGNvbnN0IHJlc3VsdDMgPSB0aGlzLmNoZWNrU3RyaW5nTGVuZ3RoKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgaWYgKHJlc3VsdDEgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIGEgc3BlY2lhbCBjaGFyYWN0ZXInDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIGlmIChyZXN1bHQyID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdwYXNzd29yZCBuZWVkcyBhIG51bWJlcicNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2UgaWYgKHJlc3VsdDMgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIHRvIGJlIGJldHdlZW4gOCBhbmQgMTYgY2hhcmFjdGVycycNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICcnDQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9DQogICAgfSwNCiAgICByZWdpc3RlcigpIHsNCiAgICAgIGlmICh0aGlzLmNoZWNrUGFzc3dvcmQoKSA9PT0gZmFsc2UpIHsNCiAgICAgICAgLy8gbm90aGluZyBoYXBwZW5zDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hlY2tGb3JTYW1lUGFzc3dvcmRzKCkgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkcyBhcmUgbm90IHRoZSBzYW1lJw0KICAgICAgfSBlbHNlIGlmICh0aGlzLmNoYW5nZUZpcnN0TmFtZVRleHQgPT09ICcnKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2ZpcnN0IG5hbWUgaXMgZW1wdHknDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlTGFzdE5hbWVUZXh0ID09PSAnJykgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdsYXN0IG5hbWUgaXMgZW1wdHknDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlY29tcGFueVRleHQgPT09ICcnKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2NvbXBhbnkgaXMgZW1wdHknDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlRW1haWxUZXh0ID09PSAnJykgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdlbWFpbCBpcyBlbXB0eScNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnN0IHBheWxvYWQgPSAneyJmaXJzdE5hbWUiOiAiICsgdGhpcy5jaGFuZ2VGaXJzdE5hbWVUZXh0ICsgIiwgImxhc3ROYW1lIjogJyArIHRoaXMuY2hhbmdlTGFzdE5hbWVUZXh0ICsgJywgInBhc3N3b3JkIjogJyArIHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0ICsgJywgImNvbXBhbnlOYW1lIjogJyArIHRoaXMuY2hhbmdlY29tcGFueVRleHQgKyAnLCAiZW1haWwiOiAnICsgdGhpcy5jaGFuZ2VFbWFpbFRleHQgKyAnIH0nDQogICAgICAgIHRoaXMubXF0dF9jbGllbnQucHVibGlzaCh0aGlzLnRvcGljLCBwYXlsb2FkLCB0aGlzLnFvcykNCiAgICAgIH0NCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"background\">\r\n        <div class=\"warning\">\r\n          <p id=\"pop-up\" >{{this.unsuccessful}}</p>\r\n        </div>\r\n        <div class=\"aboveButtons\">\r\n            <input id=\"inputFirstName\" v-model='changeFirstNameText' placeholder=\"enter your first name\">\r\n            <P></P>\r\n            <input id=\"inputLastName\" v-model='changeLastNameText' placeholder=\"enter your last name\">\r\n            <P></P>\r\n            <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n            <P></P>\r\n            <input id=\"checkPassword\" v-model='changeSamePasswordText' placeholder=\"reenter your password\">\r\n            <P></P>\r\n            <input id=\"inputCompany\" v-model='changecompanyText' placeholder=\"enter new Company\">\r\n            <P></P>\r\n            <input id=\"inputeEmail\" v-model='changeEmailText' placeholder=\"enter new Email\">\r\n            <P></P>\r\n            <button id=\"registerButton\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n            <p> {{this.receive}} </p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import App from '../App.vue'\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '',\r\n      qos: 0,\r\n      topic: 'dentist/client/register',\r\n      topic2: 'test/dentistClient/register',\r\n      changeFirstNameText: '',\r\n      changeLastNameText: '',\r\n      changePasswordText: '',\r\n      changeSamePasswordText: '',\r\n      changecompanyText: '',\r\n      changeEmailText: '',\r\n      unsuccessful: '',\r\n      subscription: {\r\n        topic: 'test',\r\n        qos: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentist/client/register', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    containsSpecialChars(str) {\r\n      const specialChars = '[`!@#$%^&*()_+-=[]{};\\':\"\\\\|,.<>/?~]/'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    containsNumbers(str) {\r\n      const specialChars = '1234567890'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    checkStringLength(str) {\r\n      if (str.length >= 8 && str.length <= 16) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkForSamePasswords() {\r\n      if (this.changePasswordText === this.changeSamePasswordText) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkPassword() {\r\n      const result1 = this.containsSpecialChars(this.changePasswordText)\r\n      console.log(result1)\r\n      const result2 = this.containsNumbers(this.changePasswordText)\r\n      const result3 = this.checkStringLength(this.changePasswordText)\r\n      if (result1 === false) {\r\n        this.unsuccessful = 'password needs a special character'\r\n        return false\r\n      } else if (result2 === false) {\r\n        this.unsuccessful = 'password needs a number'\r\n        return false\r\n      } else if (result3 === false) {\r\n        this.unsuccessful = 'password needs to be between 8 and 16 characters'\r\n        return false\r\n      } else {\r\n        this.unsuccessful = ''\r\n        return true\r\n      }\r\n    },\r\n    register() {\r\n      if (this.checkPassword() === false) {\r\n        // nothing happens\r\n      } else if (this.checkForSamePasswords() === false) {\r\n        this.unsuccessful = 'passwords are not the same'\r\n      } else if (this.changeFirstNameText === '') {\r\n        this.unsuccessful = 'first name is empty'\r\n      } else if (this.changeLastNameText === '') {\r\n        this.unsuccessful = 'last name is empty'\r\n      } else if (this.changecompanyText === '') {\r\n        this.unsuccessful = 'company is empty'\r\n      } else if (this.changeEmailText === '') {\r\n        this.unsuccessful = 'email is empty'\r\n      } else {\r\n        const payload = '{\"firstName\": \" + this.changeFirstNameText + \", \"lastName\": ' + this.changeLastNameText + ', \"password\": ' + this.changePasswordText + ', \"companyName\": ' + this.changecompanyText + ', \"email\": ' + this.changeEmailText + ' }'\r\n        this.mqtt_client.publish(this.topic, payload, this.qos)\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.background {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    height: 70vh;\r\n    background-color: #80BAB2;\r\n}\r\n#pop-up {\r\n    color: red;\r\n    font-size: 20px;\r\n}\r\n\r\n#registerButton {\r\n    width: 100%;\r\n}\r\n</style>\r\n"]}]}