{"remainingRequest":"C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--5!C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\src\\views\\UserProfile.vue?vue&type=template&id=e928b7d8&","dependencies":[{"path":"C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\src\\views\\UserProfile.vue","mtime":1673014117857},{"path":"C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673013735199},{"path":"C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1673013746588},{"path":"C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673013735199},{"path":"C:\\Users\\adria\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1673013746585}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}