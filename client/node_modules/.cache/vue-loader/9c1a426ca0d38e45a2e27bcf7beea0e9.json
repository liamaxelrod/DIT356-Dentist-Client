{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Appointments.vue?vue&type=style&index=0&id=45b08fee&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Appointments.vue","mtime":1672304861762},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKg0KQ2hhbmdlIHNvIGl0IGNvdmVycyAxMDAlIG5vdCBQWA0KKi8NCkBtZWRpYSAobWF4LXdpZHRoOiA4MDBweCkge30NCi5iYWNrZ3JvdW5kIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGZsZXgtZGlyZWN0aW9uOiByb3c7DQogIGhlaWdodDogMTAwJTsNCiAgd2lkdGg6IDEwMCU7DQp9DQouZGl2MSB7DQovKiBib3JkZXI6IDEwcHgNCnNvbGlkIHJnYigwLCAyNTUsIDEwNik7ICovDQp9DQouZGl2MiB7DQpib3JkZXI6IDEwcHgNCnNvbGlkIHJnYigyMjEsIDI1NSwgMCk7DQp9DQojaDEgew0KICAvKiBmbG9hdDogY2VudGVyOyAqLw0KICBmb250LXNpemU6IDIwcHg7DQogIGZvbnQtd2VpZ2h0OiBib2xkOw0KICB0ZXh0LWFsaWduOiByaWdodDsNCiAgLyogY29sb3I6IHJnYigwLCAyNTUsIDEwNik7ICovDQp9DQoNCg=="},{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";AAoJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Appointments.vue","sourceRoot":"src/views","sourcesContent":["<template class=\"test\">\r\n  <div class=\"background\">\r\n    <div class=\"div1\">\r\n      <b-row>\r\n        <b-col md=\"auto\">\r\n          <!-- ADD INFORMATION IF THERE IS NO APPOINTMENT THAT DAY -->\r\n          <b-calendar v-model=\"value\" locale=\"en-EU\"></b-calendar>\r\n        </b-col>\r\n        <b-col>\r\n          <p>Value: <b>'{{ value }}'</b></p>\r\n        </b-col>\r\n      </b-row>\r\n      <p onchange=\"myFunction\" >| {{this.receive}} |</p>\r\n      <b class=\"btn btn-dark\" @click=\"appointments\" style= \"width: 17rem;\">Get appointments</b>\r\n      <div class=\"card border-info mb-3\" style=\"width: 17rem;\">\r\n        <div class=\"card-header text-info\">\r\n          Appointment information\r\n        </div>\r\n        <ul class=\"list-group list-group-flush text-info\">\r\n          <li class=\"list-group-item\">Client ID</li>\r\n          <li class=\"list-group-item\">Date</li>\r\n          <li class=\"list-group-item\">Time</li>\r\n        </ul>\r\n      </div>\r\n      <!-- <div class=\"card border-danger mb-3\" style=\"width: 17rem;\">\r\n        <div class=\"card-header text-danger\">\r\n          Cancel Appointment\r\n        </div>\r\n        <ul class=\"list-group list-group-flush text-info\">\r\n          <input id=\"inputDate\" v-model=\"cancelDate\" placeholder=\"Date of appointment YYYY-MM-DD\"/>\r\n          <input id=\"inputTime\" v-model=\"cancelTime\" placeholder=\"Time of appointment 00:00\"/>\r\n        </ul>\r\n      </div> -->\r\n    </div>\r\n    <div class=\"div2\">\r\n      <p class=\"text-center\" id=\"h1\"> working hours </p>\r\n      <p> Monday: {{ this.workTime.monday }} </p>\r\n      <p> Tuesday: {{ this.workTime.tuesday }}</p>\r\n      <p> Wednesday: {{ this.workTime.wednesday }}</p>\r\n      <p> Thursday: {{ this.workTime.thursday }}</p>\r\n      <p> Friday: {{ this.workTime.friday }}</p>\r\n      <p> Saturday: {{ this.workTime.saturday }}</p>\r\n      <p> Sunday: {{ this.workTime.sunday }}</p>\r\n      <p>{{ this.unsuccessfulBreakChange }}</p>\r\n      <input type=\"date\" v-model='displayData'>\r\n      <p>selected date: { {{ this.displayData }} }</p>\r\n      <div class=\"timeBreak\">\r\n        <input type=\"time\" v-model='displayTime'>\r\n        <p>selected time: { {{ this.displayTime }} }</p>\r\n        <button class=\"btn btn-primary\" id=\"buttonFikaBreak\" @click=\"changeFikaBreak\">change fika break</button>\r\n        <p></p>\r\n        <input type=\"time\" v-model='displayTime'>\r\n        <p>selected time: { {{ this.displayTime }} }</p>\r\n        <button class=\"btn btn-primary\" id=\"buttonLunchBreak\" @click=\"changeLunchBreak\">change lunch break</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      unsuccessfulBreakChange: '',\r\n      displayData: '',\r\n      selectFika: '',\r\n      displayTime: '',\r\n      mqtt_client: null,\r\n      value: '',\r\n      receive: '',\r\n      context: '',\r\n      news: 'none',\r\n      subscription: {\r\n        topic: 'dentistimo/dentist-appointment/all-appointments-day',\r\n        qos: 0\r\n      },\r\n      workTime: {\r\n        monday: '',\r\n        tuesday: '',\r\n        wednesday: '',\r\n        thursday: '',\r\n        friday: '',\r\n        saturday: '',\r\n        sunday: ''\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      this.context = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/dentist-appointment/all-appointments-day', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  /*\r\nFetching the appointments of dentistid \"xxxx\". Next step is to incoprate it so it knows what dentist is logged in and uses that dentist\r\n  */\r\n  methods: {\r\n    appointments() {\r\n      const payload = JSON.stringify({\r\n        dentistid: 2,\r\n        date: this.value\r\n      })\r\n      const topic = 'dentistimo/dentist-appointment/get-all-appointments-day'\r\n      const qos = 0\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    changeFikaBreak() {\r\n      const payload = JSON.stringify({\r\n        dentistid: 'need dentistid',\r\n        breakType: 'Fika',\r\n        date: 'null',\r\n        time: this.displayTime\r\n      })\r\n      const topic = 'dentistimo/dentist/breaks'\r\n      const qos = 0\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    changeLunchBreak() {\r\n      const payload = JSON.stringify({\r\n        dentistid: 'need dentistid',\r\n        breakType: 'lunch',\r\n        date: 'null',\r\n        time: this.displayTime\r\n      })\r\n      const topic = 'dentistimo/dentist/breaks'\r\n      const qos = 0\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*\r\nChange so it covers 100% not PX\r\n*/\r\n@media (max-width: 800px) {}\r\n.background {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.div1 {\r\n/* border: 10px\r\nsolid rgb(0, 255, 106); */\r\n}\r\n.div2 {\r\nborder: 10px\r\nsolid rgb(221, 255, 0);\r\n}\r\n#h1 {\r\n  /* float: center; */\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  text-align: right;\r\n  /* color: rgb(0, 255, 106); */\r\n}\r\n\r\n</style>\r\n"]}]}