{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Appointments.vue?vue&type=style&index=0&id=45b08fee&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Appointments.vue","mtime":1673005393668},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1673005386571},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1673005392991},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1673005390218},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673005385989},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1673005392990}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgLmJhY2tncm91bmQgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGhlaWdodDogMTAwJTsKICB3aWR0aDogMTAwJTsKICBtaW4td2lkdGg6IDcwMHB4OwogIG1pbi1oZWlnaHQ6IDkwMHB4Owp9Ci5kaXYxIHsKICAvKgogYm9yZGVyOiAxMHB4CiAgc29saWQgcmdiKDAsIDI1NSwgMTA2KTsgKi8KfQoKLmRpdjIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7CiAgYm9yZGVyOiAwcHgKICAvKgogIHNvbGlkIHJnYigyMjEsIDI1NSwgMCk7CiAgKi8KfQouZGl2Mi0xIHsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7Cn0KLmRpdjItMiB7CiAgZGlzcGxheTogZmxleDsKICBoZWlnaHQ6IDEwMCU7CiAgd2lkdGg6IDEwMCU7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOwogIC8qIGJvcmRlcjogMTBweAogIHNvbGlkIHJnYigyMjEsIDI1NSwgMCk7ICovCn0KCiNidXR0b25GaWthQnJlYWssICNidXR0b25MdW5jaEJyZWFrIHsKICAvKgogIHdpZHRoOiAxNjBweDsKICBtYXJnaW46IDNweDsKICAvKiBjb2xvcjogcmdiKDAsIDI1NSwgMTA2KTsgKi8KfQouaDR7CiAgZm9udC1mYW1pbHk6ICJTZWdvZSBVSSIsIFRhaG9tYSwgVmVyZGFuYSwgc2Fucy1zZXJpZjsKfQoK"},{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";AA4YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Appointments.vue","sourceRoot":"src/views","sourcesContent":["<template class=\"test\">\r\n  <div class=\"background\">\r\n    <div class=\"div1\">\r\n      <b-row>\r\n      <b-col md=\"auto\">\r\n        <b-calendar v-model=\"value\" locale=\"en-EU\"></b-calendar>\r\n      </b-col>\r\n      </b-row>\r\n      <div>\r\n        <div class=\"card border-info mb-3\" style=\"width: 17rem;\">\r\n          <div class=\"card-header text-info\">\r\n            Appointment information\r\n          </div>\r\n            <ul class=\"list-group list-group-flush text-info\">\r\n              <li class=\"list-group-item\" v-bind=\"userid\">Client ID: {{ userid.slice(0,-2) }}</li>\r\n              <li class=\"list-group-item\" v-bind=\"date\">Date: {{ date.slice(0,-2) }}</li>\r\n              <li class=\"list-group-item\" v-bind=\"time\">Time: {{ time.slice(0,-2) }}</li>\r\n              <li class=\"list-group-item\" v-bind=\"issuance\">Issuance ID: {{ issuance.slice(0,-2) }}</li>\r\n            </ul>\r\n            <b class=\"btn btn-dark\" @click=\"appointments\" style= \"width: 17rem;\">Get appointments</b>\r\n            <h4>{{ this.noAppointments }}</h4>\r\n        </div>\r\n        <div class=\"card border-danger mb-3\" style=\"width: 17rem;\">\r\n          <div class=\"card-header text-danger\">\r\n            Cancel Appointment\r\n          </div>\r\n          <ul class=\"list-group list-group-flush text-info\">\r\n            <input id=\"inputIssuance\" v-model=\"cancelIssuance\" placeholder=\"Issuance ID\"/>\r\n            <b class=\"btn btn-danger\" @click=\"cancelAppointments\" style= \"width: 17rem;\">Cancel</b>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"div2\">\r\n      <div class=\"card-group\" style=\"width: 45rem;\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Working hours</h5>\r\n            <ul class=\"list-group list-group-flush text-info\">\r\n              <li class=\"list-group-item\" >Monday: {{ this.workTime.monday }}</li>\r\n              <li class=\"list-group-item\" >Tuesday: {{ this.workTime.tuesday }}</li>\r\n              <li class=\"list-group-item\" >Wednesday: {{ this.workTime.wednesday }}</li>\r\n              <li class=\"list-group-item\" >Thursday:{{ this.workTime.thursday }}</li>\r\n              <li class=\"list-group-item\" >Friday: {{ this.workTime.friday }}</li>\r\n              <li class=\"list-group-item\" >Saturday: {{ this.workTime.saturday }}</li>\r\n              <li class=\"list-group-item\" >Sunday: {{ this.workTime.sunday }}</li>\r\n            </ul>\r\n            <ul class=\"list-group list-group-flush text-dark\">\r\n              <li class=\"list-group-item\" >{{ this.DisplayedLunchBreak }}</li>\r\n              <li class=\"list-group-item\" >{{ this.DisplayedFikaBreak }}</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div class=\"card\">\r\n          <div class=\"card-body\">\r\n            <h5 class=\"card-title\">Create / Delete break</h5>\r\n            <p>{{ this.successfulBreak }}</p>\r\n            <input type=\"date\" v-model='breakData'>\r\n            <input type=\"time\" v-model='breakTime'>\r\n            <p>selected Data: {{ this.breakData }}</p>\r\n            <p>selected time: {{ this.breakTime }}</p>\r\n            <button class=\"btn btn-primary\" id=\"buttonFikaBreak\" @click=\"makeFikaBreak\">make fika break</button>\r\n            <button class=\"btn btn-danger\" id=\"buttonFikaBreak\" @click=\"deleteFikaBreak\">delete fika break</button>\r\n            <p></p>\r\n            <button class=\"btn btn-primary\" id=\"buttonLunchBreak\" @click=\"makeLunchBreak\">make lunch break</button>\r\n            <button class=\"btn btn-danger\" id=\"buttonLunchBreak\" @click=\"deleteLunchBreak\">delete lunch break</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      topicSchedule: 'dentistimo/dentist-office/fetch-one',\r\n      topicBreaks: 'dentistimo/dentist/breaks',\r\n      topicDelete: 'dentistimo/booking/delete-break',\r\n      successfulBreak: '',\r\n      DisplayedFikaBreak: '',\r\n      DisplayedLunchBreak: '',\r\n      breakData: '',\r\n      breakTime: '',\r\n      mqtt_client: null,\r\n      receive: '',\r\n      value: '',\r\n      userid: '',\r\n      date: '',\r\n      time: '',\r\n      issuance: '',\r\n      cancelIssuance: '',\r\n      news: 'none',\r\n      subscription: {\r\n        topic: 'dentistimo/dentist-appointment/all-appointments-day',\r\n        qos: 2\r\n      },\r\n      workTime: {\r\n        monday: '',\r\n        tuesday: '',\r\n        wednesday: '',\r\n        thursday: '',\r\n        friday: '',\r\n        saturday: '',\r\n        sunday: ''\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    if (this.workTime.monday === '') {\r\n      this.getSchedule()\r\n    }\r\n    const msgCallback = (topic, message) => {\r\n      // console.log('message received' + message.toString())\r\n      this.noAppointments = ''\r\n      this.successfulBreak = ''\r\n      if (message.includes('coordinate')) {\r\n        console.log('contains office message')\r\n        this.loadSchedule(message)\r\n      }\r\n      const obj = JSON.parse(message.toString())\r\n      this.userid = ''\r\n      this.date = ''\r\n      this.time = ''\r\n      this.issuance = ''\r\n      this.lunchDate = ''\r\n      this.lunchTime = ''\r\n      this.fikaDate = ''\r\n      this.fikaTime = ''\r\n      this.DisplayedFikaBreak = ''\r\n      this.DisplayedLunchBreak = ''\r\n      for (let i = 0; i < obj.length; i++) {\r\n        const element = obj[i]\r\n        if (element.appointmentType === 'appointment') {\r\n          console.log('appointment')\r\n          this.userid += (element.userid) + ', '\r\n          this.date += (element.date) + ', '\r\n          this.time += (element.time) + ', '\r\n          this.issuance += (element.issuance) + ', '\r\n        } else if (element.appointmentType === 'lunch') {\r\n          console.log('lunch')\r\n          this.lunchDate = (element.date)\r\n          this.lunchTime = (element.time)\r\n          this.DisplayedLunchBreak += 'Lunch break: ' + this.lunchDate + ' ' + this.lunchTime + ' \\n '\r\n        } else if (element.appointmentType === 'fika') {\r\n          console.log('fika')\r\n          this.fikaDate = (element.date)\r\n          this.fikaTime = (element.time)\r\n          this.DisplayedFikaBreak += 'Fika break: ' + this.fikaDate + ' ' + this.fikaTime + ' \\n '\r\n        }\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/dentist-appointment/all-appointments-day', { qos: 2 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    appointments() {\r\n      const dentistID = JSON.parse(localStorage.getItem('accountInfo')).dentistId\r\n      const payload = JSON.stringify({\r\n        dentistid: dentistID,\r\n        date: this.value\r\n      })\r\n      this.noAppointments = 'No bookings this date'\r\n      this.userid = ''\r\n      this.date = ''\r\n      this.time = ''\r\n      this.issuance = ''\r\n      const topic = 'dentistimo/dentist-appointment/get-all-appointments-day'\r\n      this.mqtt_client.publish(topic, payload, 2)\r\n    },\r\n    cancelAppointments() {\r\n      // Display when an appointment is cancelled or not.\r\n      const payload = JSON.stringify({\r\n        issuance: this.cancelIssuance\r\n      })\r\n      const topic = 'dentistimo/booking/delete-booking'\r\n      this.mqtt_client.publish(topic, payload, 2)\r\n      this.cancelIssuance = ''\r\n      location.reload()\r\n    },\r\n    makeFikaBreak() {\r\n      if (this.checkInputTime()) {\r\n        // this.successfulBreak = 'please insert date and time'\r\n        const dentistID = JSON.parse(localStorage.getItem('accountInfo')).dentistId\r\n        const officeId = JSON.parse(localStorage.getItem('accountInfo')).officeId\r\n        const payload = JSON.stringify({\r\n          dentistOfficeId: officeId,\r\n          dentistid: dentistID,\r\n          date: this.breakData,\r\n          time: this.breakTime,\r\n          appointmentType: 'fika'\r\n        })\r\n        this.publishReceive(payload, this.topicBreaks, this.topicBreaks)\r\n      }\r\n    },\r\n    makeLunchBreak() {\r\n      if (this.checkInputTime()) {\r\n        // this.successfulBreak = 'please insert date and time'\r\n        const dentistID = JSON.parse(localStorage.getItem('accountInfo')).dentistId\r\n        const officeId = JSON.parse(localStorage.getItem('accountInfo')).officeId\r\n        const payload = JSON.stringify({\r\n          dentistOfficeId: officeId,\r\n          dentistid: dentistID,\r\n          date: this.breakData,\r\n          time: this.breakTime,\r\n          appointmentType: 'lunch'\r\n        })\r\n        this.publishReceive(payload, this.topicBreaks, this.topicBreaks)\r\n      }\r\n    },\r\n    deleteFikaBreak() {\r\n      if (this.checkInputTime()) {\r\n        // this.successfulBreak = 'please insert date and time'\r\n        const dentistID = JSON.parse(localStorage.getItem('accountInfo')).dentistId\r\n        const payload = JSON.stringify({\r\n          dentistid: dentistID,\r\n          date: this.breakData,\r\n          time: this.breakTime\r\n        })\r\n        this.publishReceive(payload, this.topicDelete, this.topicDelete)\r\n      }\r\n    },\r\n    deleteLunchBreak() {\r\n      if (this.checkInputTime()) {\r\n        // this.successfulBreak = 'please insert date and time'\r\n        const dentistID = JSON.parse(localStorage.getItem('accountInfo')).dentistId\r\n        const payload = JSON.stringify({\r\n          dentistid: dentistID,\r\n          date: this.breakData,\r\n          time: this.breakTime\r\n        })\r\n        this.publishReceive(payload, this.topicDelete, this.topicDelete)\r\n      }\r\n    },\r\n    publishReceive(payload, publishTopic, subscribeTopic) {\r\n      this.mqtt_client.subscribe(subscribeTopic, { qos: 2 }, (error, res) => {\r\n        if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n      })\r\n      const topic = publishTopic\r\n      const qos = 2\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    getSchedule() {\r\n      const officeId = JSON.parse(localStorage.getItem('accountInfo')).officeId\r\n      const payload = JSON.stringify({\r\n        id: officeId\r\n      })\r\n      this.publishReceive(payload, 'dentistimo/dentist-office/fetch-one', 'dentistimo/dentist-office/one-office')\r\n    },\r\n    loadSchedule(message) {\r\n      const dentistOffice = JSON.parse(message).openinghours\r\n      this.workTime.monday = dentistOffice.monday\r\n      this.workTime.tuesday = dentistOffice.tuesday\r\n      this.workTime.wednesday = dentistOffice.wednesday\r\n      this.workTime.thursday = dentistOffice.thursday\r\n      this.workTime.friday = dentistOffice.friday\r\n      this.workTime.saturday = 'no working hours'\r\n      this.workTime.sunday = 'no working hours'\r\n    },\r\n    checkInputTime() {\r\n      const time = this.breakTime\r\n      const timeArray = time.split(':')\r\n      const minute = timeArray[1]\r\n      if (minute === '00' || minute === '30') {\r\n        return true\r\n      } else {\r\n        this.successfulBreak = 'every hour or half hour'\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  .background {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  height: 100%;\r\n  width: 100%;\r\n  min-width: 700px;\r\n  min-height: 900px;\r\n}\r\n.div1 {\r\n  /*\r\n border: 10px\r\n  solid rgb(0, 255, 106); */\r\n}\r\n\r\n.div2 {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  border: 0px\r\n  /*\r\n  solid rgb(221, 255, 0);\r\n  */\r\n}\r\n.div2-1 {\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n.div2-2 {\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  /* border: 10px\r\n  solid rgb(221, 255, 0); */\r\n}\r\n\r\n#buttonFikaBreak, #buttonLunchBreak {\r\n  /*\r\n  width: 160px;\r\n  margin: 3px;\r\n  /* color: rgb(0, 255, 106); */\r\n}\r\n.h4{\r\n  font-family: \"Segoe UI\", Tahoma, Verdana, sans-serif;\r\n}\r\n\r\n</style>\r\n\r\n<!--\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    this.thisDentistid = JSON.parse(localStorage.getItem('accountInfo')).dentistId\r\n    this.getSchedule()\r\n    const msgCallback = (topic, message) => {\r\n      this.noAppointments = ''\r\n      const obj = JSON.parse(message.toString())\r\n      this.userid = ''\r\n      this.date = ''\r\n      this.time = ''\r\n      this.issuance = ''\r\n      for (let i = 0; i < obj.length; i++) {\r\n        const element = obj[i]\r\n        console.log(element)\r\n      }\r\n      obj.forEach(bookingInformation => {\r\n        if (bookingInformation.appointmentType === 'appointment') {\r\n          console.log('appointment')\r\n          this.userid += (bookingInformation.userid) + ', '\r\n          this.date += (bookingInformation.date) + ', '\r\n          this.time += (bookingInformation.time) + ', '\r\n          this.issuance += (bookingInformation.issuance) + ', '\r\n        } else if (bookingInformation.appointmentType === 'lunch') {\r\n          console.log('lunch')\r\n          console.log(bookingInformation)\r\n          this.lunchDate = (bookingInformation.date)\r\n          this.lunchTime = (bookingInformation.time)\r\n          this.DisplayedLunchBreak = 'Lunch break: ' + this.lunchDate + ' ' + this.lunchTime\r\n        } else if (bookingInformation.appointmentType === 'fika') {\r\n          console.log('fika')\r\n        }\r\n      })\r\n      if (message.includes('coordinate')) {\r\n        console.log('contains office message')\r\n        this.loadSchedule(message)\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/dentist-appointment/all-appointments-day', { qos: 2 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n -->\r\n"]}]}