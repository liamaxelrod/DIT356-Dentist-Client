{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Login.vue","mtime":1672328248966},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCmltcG9ydCBjaGVja2luZ0lucHV0cyBmcm9tICcuLi9jaGVja2luZ0lucHV0cycNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBub3RPckxvZ2luOiAnJywNCiAgICAgIG1xdHRfY2xpZW50OiBudWxsLA0KICAgICAgcmVjZWl2ZTogJycsDQogICAgICByZXF1ZXN0SUQ6ICcnLA0KICAgICAgcW9zOiAyLA0KICAgICAgdG9waWM6ICdkZW50aXN0aW1vL2xvZ2luL2RlbnRpc3QnLA0KICAgICAgY2hhbmdlRW1haWxUZXh0OiAnJywNCiAgICAgIGNoYW5nZVBhc3N3b3JkVGV4dDogJycsDQogICAgICB1bnN1Y2Nlc3NmdWw6ICcnDQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMubXF0dF9jbGllbnQgPSBteW1xdHQuY3JlYXRlQ2xpZW50KCkNCiAgICBjb25zdCBtc2dDYWxsYmFjayA9ICh0b3BpYywgbWVzc2FnZSkgPT4gew0KICAgICAgdGhpcy5yZWNlaXZlID0gbWVzc2FnZS50b1N0cmluZygpDQogICAgICBpZiAodG9waWMuaW5jbHVkZXMoJ2Vycm9yJykpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSB0aGlzLnJlY2VpdmUNCiAgICAgICAgY29uc29sZS5sb2coJ2ZhaWx1cmUnKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3MnKQ0KICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnJlY2VpdmUpDQogICAgICAgIGlmICh0aGlzLnJlY2VpdmUuaW5jbHVkZXModGhpcy5jaGFuZ2VFbWFpbFRleHQpKSB7DQogICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjY291bnRJbmZvJywgdGhpcy5yZWNlaXZlKQ0KICAgICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJykNCiAgICAgICAgICBsb2NhdGlvbi5yZWxvYWQoKQ0KICAgICAgICB9DQogICAgICB9DQogICAgICAvLyBjb25zb2xlLmxvZyh7IHRvcGljOiB0b3BpYywgbWVzc2FnZTogbWVzc2FnZS50b1N0cmluZygpIH0pDQogICAgfQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ21lc3NhZ2UnLCBtc2dDYWxsYmFjaykNCiAgICB0aGlzLm1xdHRfY2xpZW50Lm9uKCdzdWJzY3JpYmUnLCAodG9waWMpID0+IHsNCiAgICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpYmVkIHRvbzogJywgdG9waWMpDQogICAgfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNoZWNrUGFzc3dvcmQoKSB7DQogICAgICBjb25zdCByZXN1bHQxID0gY2hlY2tpbmdJbnB1dHMuY29udGFpbnNTcGVjaWFsQ2hhcnModGhpcy5jaGFuZ2VQYXNzd29yZFRleHQpDQogICAgICBjb25zdCByZXN1bHQyID0gY2hlY2tpbmdJbnB1dHMuc3RyaW5Db250YWluc051bWJlcnModGhpcy5jaGFuZ2VQYXNzd29yZFRleHQpDQogICAgICBjb25zdCByZXN1bHQzID0gY2hlY2tpbmdJbnB1dHMuY2hlY2tTdHJpbmdMZW5ndGgodGhpcy5jaGFuZ2VQYXNzd29yZFRleHQpDQogICAgICBpZiAocmVzdWx0MSA9PT0gZmFsc2UpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAncGFzc3dvcmQgbmVlZHMgYSBzcGVjaWFsIGNoYXJhY3RlcicNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2UgaWYgKHJlc3VsdDIgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIGEgbnVtYmVyJw0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0gZWxzZSBpZiAocmVzdWx0MyA9PT0gZmFsc2UpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAncGFzc3dvcmQgbmVlZHMgdG8gYmUgYmV0d2VlbiA4IGFuZCA5OSBjaGFyYWN0ZXJzJw0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJycNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0NCiAgICB9LA0KICAgIGxvZ2luKCkgew0KICAgICAgLy8gY29uc3QgdGVzdDEgPSBKU09OLnN0cmluZ2lmeSh7DQogICAgICAvLyAgIHRva2VuOiAnMTIzUVdFIUAjJywNCiAgICAgIC8vICAgZGVudGlzdElkOiAnMTIzNDU2Nzg5DQogICAgICAvLyAgIGVtYWlsOiAnbGlhbWF4ZWxyb2RAZ21haWwuY29tJywNCiAgICAgIC8vICAgZmlyc3ROYW1lOiAnbGlhbScsDQogICAgICAvLyAgIGxhc3ROYW1lOiAnYXhlbHJvZCcsDQogICAgICAvLyAgIG9mZmljZUlkOiAnd29uZGVyIHRvb3RoJw0KICAgICAgLy8gfSkNCiAgICAgIC8vIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdhY2NvdW50SW5mbycsIHRlc3QxKQ0KICAgICAgY29uc3QgY2hlY2sgPSB0aGlzLmNoZWNrUGFzc3dvcmQoKQ0KICAgICAgY29uc3QgY2hlY2syID0gY2hlY2tpbmdJbnB1dHMuY2hlY2tFbWFpbCh0aGlzLmNoYW5nZUVtYWlsVGV4dCkNCiAgICAgIGlmIChjaGVjazIgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2VtYWlsIG5lZWRzIHRvIGNvbnRhaW4gQCcNCiAgICAgIH0gZWxzZSBpZiAoY2hlY2sgPT09IGZhbHNlKSB7DQogICAgICAgIC8vIHJlc3BvbnNlcyBpbiBjaGVja1Bhc3N3b3JkKCkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMucmVxdWVzdElEID0gY2hlY2tpbmdJbnB1dHMubWFrZVJhbmRvbUlkKDEwKQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnN1YnNjcmliZSgnZGVudGlzdGltby9sb2dpbi9kZW50aXN0LycgKyB0aGlzLnJlcXVlc3RJRCwgeyBxb3M6IDAgfSwgKGVycm9yLCByZXMpID0+IHsNCiAgICAgICAgICBpZiAoZXJyb3IpIHsgY29uc29sZS5sb2coJ2Vycm9yID0gJywgZXJyb3IpIH0gZWxzZSB7IGNvbnNvbGUubG9nKCdyZXMgPSAnLCByZXMpIH0NCiAgICAgICAgfSkNCiAgICAgICAgdGhpcy5tcXR0X2NsaWVudC5zdWJzY3JpYmUoJ2RlbnRpc3RpbW8vbG9naW4vZXJyb3IvJyArIHRoaXMucmVxdWVzdElELCB7IHFvczogMCB9LCAoZXJyb3IsIHJlcykgPT4gew0KICAgICAgICAgIGlmIChlcnJvcikgeyBjb25zb2xlLmxvZygnZXJyb3IgPSAnLCBlcnJvcikgfSBlbHNlIHsgY29uc29sZS5sb2coJ3JlcyA9ICcsIHJlcykgfQ0KICAgICAgICB9KQ0KICAgICAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5zdHJpbmdpZnkoew0KICAgICAgICAgIGVtYWlsOiB0aGlzLmNoYW5nZUVtYWlsVGV4dCwNCiAgICAgICAgICBwYXNzd29yZDogdGhpcy5jaGFuZ2VQYXNzd29yZFRleHQsDQogICAgICAgICAgcmVxdWVzdElkOiB0aGlzLnJlcXVlc3RJRA0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnB1Ymxpc2godGhpcy50b3BpYywgcGF5bG9hZCwgdGhpcy5xb3MpDQogICAgICB9DQogICAgfSwNCiAgICByZWdpc3RlcigpIHsNCiAgICAgIC8vIG5vdCB3b3JraW5nDQogICAgICB0aGlzLiRyb3V0ZXIucHVzaCgnL3JlZ2lzdGVyJykNCiAgICB9DQogIH0NCn0NCg0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAiBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"center\">\r\n    <div class=\"warning\">\r\n      <p id=\"pop-up\">{{ this.unsuccessful }}</p>\r\n    </div>\r\n    <div class=\"inputAndButton\">\r\n      <input id=\"inputEmail\" v-model='changeEmailText' placeholder=\"enter new email\">\r\n      <P></P>\r\n      <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n      <P></P>\r\n      <button id=\"bittpnLogin\" @click=\"login\" class=\"btn btn-success btn-lg\">login</button>\r\n      <button id=\"bittpnRegister\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\nimport checkingInputs from '../checkingInputs'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      notOrLogin: '',\r\n      mqtt_client: null,\r\n      receive: '',\r\n      requestID: '',\r\n      qos: 2,\r\n      topic: 'dentistimo/login/dentist',\r\n      changeEmailText: '',\r\n      changePasswordText: '',\r\n      unsuccessful: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      if (topic.includes('error')) {\r\n        this.unsuccessful = this.receive\r\n        console.log('failure')\r\n      } else {\r\n        console.log('success')\r\n        console.log(this.receive)\r\n        if (this.receive.includes(this.changeEmailText)) {\r\n          localStorage.setItem('accountInfo', this.receive)\r\n          this.$router.push('/')\r\n          location.reload()\r\n        }\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n  },\r\n  methods: {\r\n    checkPassword() {\r\n      const result1 = checkingInputs.containsSpecialChars(this.changePasswordText)\r\n      const result2 = checkingInputs.strinContainsNumbers(this.changePasswordText)\r\n      const result3 = checkingInputs.checkStringLength(this.changePasswordText)\r\n      if (result1 === false) {\r\n        this.unsuccessful = 'password needs a special character'\r\n        return false\r\n      } else if (result2 === false) {\r\n        this.unsuccessful = 'password needs a number'\r\n        return false\r\n      } else if (result3 === false) {\r\n        this.unsuccessful = 'password needs to be between 8 and 99 characters'\r\n        return false\r\n      } else {\r\n        this.unsuccessful = ''\r\n        return true\r\n      }\r\n    },\r\n    login() {\r\n      // const test1 = JSON.stringify({\r\n      //   token: '123QWE!@#',\r\n      //   dentistId: '123456789\r\n      //   email: 'liamaxelrod@gmail.com',\r\n      //   firstName: 'liam',\r\n      //   lastName: 'axelrod',\r\n      //   officeId: 'wonder tooth'\r\n      // })\r\n      // localStorage.setItem('accountInfo', test1)\r\n      const check = this.checkPassword()\r\n      const check2 = checkingInputs.checkEmail(this.changeEmailText)\r\n      if (check2 === false) {\r\n        this.unsuccessful = 'email needs to contain @'\r\n      } else if (check === false) {\r\n        // responses in checkPassword()\r\n      } else {\r\n        this.requestID = checkingInputs.makeRandomId(10)\r\n        this.mqtt_client.subscribe('dentistimo/login/dentist/' + this.requestID, { qos: 0 }, (error, res) => {\r\n          if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n        })\r\n        this.mqtt_client.subscribe('dentistimo/login/error/' + this.requestID, { qos: 0 }, (error, res) => {\r\n          if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n        })\r\n        const payload = JSON.stringify({\r\n          email: this.changeEmailText,\r\n          password: this.changePasswordText,\r\n          requestId: this.requestID\r\n        })\r\n        this.mqtt_client.publish(this.topic, payload, this.qos)\r\n      }\r\n    },\r\n    register() {\r\n      // not working\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #80BAB2;\r\n}\r\n\r\n#bittpnRegister {\r\n  display: inline-block;\r\n  margin: 10px;\r\n}\r\n</style>\r\n"]}]}