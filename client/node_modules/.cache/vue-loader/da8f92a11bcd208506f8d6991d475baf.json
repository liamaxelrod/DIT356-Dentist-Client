{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue","mtime":1671383686771},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1670944876648},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1670944884204},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1670944881773},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944875280},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1670944884203}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jZW50ZXIgew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgICBoZWlnaHQ6IDcwdmg7DQogICAgYmFja2dyb3VuZC1jb2xvcjogIzgwQkFCMjsNCiAgICAvKg0KICAgIGhlaWdodDogMTAwJTsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBwcm9ibGVtIHdpdGggb3ZlcmFsbCBDU1MgYXBwIHBhZ2UgSSB0aGluayBmb3IgdGhpcyBwYXJ0IHRvIHdvcmsgd2l0aCB0aGUgQ1NTDQogICAgKi8NCn0NCi8qIC5wb3AtdXAge2JsYW5rIGZvciBub3d9ICAqLw0KI3JlZ2lzdGVyQnV0dG9uIHsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgd2lkdGg6IDEwMCU7DQp9DQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"center\">\r\n        <div class=\"aboveButtons\">\r\n            <p  id=\"pop-up\">{{this.stateIfSuccessful}}</p>\r\n            <P></P>\r\n            <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n            <P></P>\r\n            <input id=\"checkPassword\" v-model='changeSamePasswordText' placeholder=\"reenter your password\">\r\n            <P></P>\r\n            <input id=\"inputCompany\" v-model='changecompanyText' placeholder=\"enter new Company\">\r\n            <P></P>\r\n            <input id=\"inputeEmail\" v-model='changeEmailText' placeholder=\"enter new Email\">\r\n            <P></P>\r\n            <button id=\"registerButton\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n            <p onchange=\"myFunction\" >| {{this.receive}} |</p>\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import App from '../App.vue'\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '',\r\n      news: 'none',\r\n      changePasswordText: '',\r\n      changeSamePasswordText: '',\r\n      changecompanyText: '',\r\n      changeEmailText: '',\r\n      stateIfSuccessful: 'successful/failed to register',\r\n      subscription: {\r\n        topic: 'test',\r\n        qos: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('test', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    containsSpecialChars(str) {\r\n      const specialChars = '[`!@#$%^&*()_+-=[]{};\\':\"\\\\|,.<>/?~]/'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    containsNumbers(str) {\r\n      const specialChars = '1234567890'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    checkStringLength(str) {\r\n      if (str.length >= 8 && str.length <= 16) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkForSamePasswords() {\r\n      if (this.changePasswordText === this.changeSamePasswordText) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkPassword() {\r\n      const result1 = this.containsSpecialChars(this.changePasswordText)\r\n      const result2 = this.containsNumbers(this.changePasswordText)\r\n      const result3 = this.checkStringLength(this.changePasswordText)\r\n      if (result1 === true && result2 === true && result3 === true) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkCompany() {\r\n      /* blank for now */\r\n    },\r\n    checkEmail() {\r\n      /* blank for now */\r\n    },\r\n    register() {\r\n    const payload = '{\"password\": ' + this.changePasswordText + ', \"company name\": ' + this.changecompanyText + ', \"email\": ' + this.changeEmailText + ' }'\r\n    const topic = 'test'\r\n    const qos = 0 \r\n    this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    myFunction() {\r\n      console.log('do something')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.center {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 70vh;\r\n    background-color: #80BAB2;\r\n    /*\r\n    height: 100%;\r\n    width: 100%;\r\n    problem with overall CSS app page I think for this part to work with the CSS\r\n    */\r\n}\r\n/* .pop-up {blank for now}  */\r\n#registerButton {\r\n    height: 100%;\r\n    width: 100%;\r\n}\r\n</style>\r\n"]}]}