{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue","mtime":1673170899774},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1673101744652},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1673101752030}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgY2hlY2tpbmdJbnB1dHMgZnJvbSAnLi4vY2hlY2tpbmdJbnB1dHMnDQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtcXR0X2NsaWVudDogbnVsbCwNCiAgICAgIHJlY2VpdmU6ICcnLCAvLyByZWNlaXZlcyBtZXNzYWdlcw0KICAgICAgcmVxdWVzdElEOiAnJywNCiAgICAgIHFvczogMiwNCiAgICAgIHRvcGljOiAnZGVudGlzdGltby9yZWdpc3Rlci9kZW50aXN0JywNCiAgICAgIGNoYW5nZUZpcnN0TmFtZVRleHQ6ICcnLA0KICAgICAgY2hhbmdlTGFzdE5hbWVUZXh0OiAnJywNCiAgICAgIGNoYW5nZVBhc3N3b3JkVGV4dDogJycsDQogICAgICBjaGFuZ2VDaGVja1Bhc3N3b3JkVGV4dDogJycsDQogICAgICBjaGFuZ2Vjb21wYW55VGV4dDogJycsDQogICAgICBjaGFuZ2VFbWFpbFRleHQ6ICcnLA0KICAgICAgdW5zdWNjZXNzZnVsOiAnJywNCiAgICAgIHN1YnNjcmlwdGlvbjogew0KICAgICAgICB0b3BpYzogJ3Rlc3QnLA0KICAgICAgICBxb3M6IDANCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5tcXR0X2NsaWVudCA9IG15bXF0dC5jcmVhdGVDbGllbnQoKQ0KICAgIGNvbnN0IG1zZ0NhbGxiYWNrID0gKHRvcGljLCBtZXNzYWdlKSA9PiB7DQogICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICcnDQogICAgICB0aGlzLnJlY2VpdmUgPSBtZXNzYWdlLnRvU3RyaW5nKCkNCiAgICAgIC8vIGNvbnNvbGUubG9nKHRvcGljKQ0KICAgICAgY29uc29sZS5sb2coJ21lc3NhZ2UgcmVjZWl2ZWQnICsgbWVzc2FnZS50b1N0cmluZygpKQ0KICAgICAgaWYgKHRvcGljLmluY2x1ZGVzKCdkZW50aXN0aW1vL3JlZ2lzdGVyL2Vycm9yJykpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSB0aGlzLnJlY2VpdmUNCiAgICAgIH0gZWxzZSBpZiAodG9waWMuaW5jbHVkZXMoJ3N1Y2Nlc3MnKSkgew0KICAgICAgICBjb25zb2xlLmxvZygnc3VjY2VzcycpDQogICAgICAgIC8vIHRoaXMuJHJvdXRlci5wdXNoKCcvbG9naW4nKQ0KICAgICAgfQ0KICAgICAgLy8gY29uc29sZS5sb2coeyB0b3BpYzogdG9waWMsIG1lc3NhZ2U6IG1lc3NhZ2UudG9TdHJpbmcoKSB9KQ0KICAgIH0NCiAgICB0aGlzLm1xdHRfY2xpZW50Lm9uKCdtZXNzYWdlJywgbXNnQ2FsbGJhY2spDQogICAgdGhpcy5tcXR0X2NsaWVudC5vbignc3Vic2NyaWJlJywgKHRvcGljKSA9PiB7DQogICAgICBjb25zb2xlLmxvZygnU3Vic2NyaWJlZCB0b286ICcsIHRvcGljKQ0KICAgIH0pDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjaGVja1Bhc3N3b3JkKCkgew0KICAgICAgY29uc3QgcmVzdWx0MSA9IGNoZWNraW5nSW5wdXRzLmNvbnRhaW5zU3BlY2lhbENoYXJzKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgY29uc3QgcmVzdWx0MiA9IGNoZWNraW5nSW5wdXRzLnN0cmluQ29udGFpbnNOdW1iZXJzKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgY29uc3QgcmVzdWx0MyA9IGNoZWNraW5nSW5wdXRzLmNoZWNrU3RyaW5nTGVuZ3RoKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgLy8gY29uc29sZS5sb2cocmVzdWx0MSwgcmVzdWx0MiwgcmVzdWx0MykNCiAgICAgIGlmIChyZXN1bHQxID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdwYXNzd29yZCBuZWVkcyBhIHNwZWNpYWwgY2hhcmFjdGVyIGluIGVudGVyIG5ldyBwYXNzd29ycmQnDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIGlmIChyZXN1bHQyID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdwYXNzd29yZCBuZWVkcyBhIG51bWJlciBpbiBlbnRlciBuZXcgcGFzc3dvcnJkJw0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0gZWxzZSBpZiAocmVzdWx0MyA9PT0gZmFsc2UpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAncGFzc3dvcmQgbmVlZHMgdG8gYmUgYmV0d2VlbiA4IGFuZCA5OSBjaGFyYWN0ZXJzIGluIGVudGVyIG5ldyBwYXNzd29ycmQnDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAnJw0KICAgICAgICByZXR1cm4gdHJ1ZQ0KICAgICAgfQ0KICAgIH0sDQogICAgcmVnaXN0ZXIoKSB7DQogICAgICBpZiAodGhpcy5jaGVja1Bhc3N3b3JkKCkgPT09IGZhbHNlKSB7DQogICAgICAgIC8vIHJlc3BvbnNlcyBhcmUgaW4gY2hlY2tQYXNzd29yZCgpDQogICAgICB9IGVsc2UgaWYgKGNoZWNraW5nSW5wdXRzLmNoZWNrU2FtZVN0cmluZyh0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCwgdGhpcy5jaGFuZ2VDaGVja1Bhc3N3b3JkVGV4dCkgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkcyBhcmUgbm90IHRoZSBzYW1lJw0KICAgICAgfSBlbHNlIGlmICh0aGlzLmNoYW5nZUZpcnN0TmFtZVRleHQgPT09ICcnKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2ZpcnN0IG5hbWUgaXMgZW1wdHknDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlTGFzdE5hbWVUZXh0ID09PSAnJykgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdsYXN0IG5hbWUgaXMgZW1wdHknDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlY29tcGFueVRleHQgPT09ICcnKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2NvbXBhbnkgaXMgZW1wdHknDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlRW1haWxUZXh0ID09PSAnJykgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdlbWFpbCBpcyBlbXB0eScNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMucmVxdWVzdElEID0gY2hlY2tpbmdJbnB1dHMubWFrZVJhbmRvbUlkKDEwKQ0KICAgICAgICBjb25zdCBwYXlsb2FkID0gSlNPTi5zdHJpbmdpZnkoew0KICAgICAgICAgIGZpcnN0TmFtZTogdGhpcy5jaGFuZ2VGaXJzdE5hbWVUZXh0LA0KICAgICAgICAgIGxhc3ROYW1lOiB0aGlzLmNoYW5nZUxhc3ROYW1lVGV4dCwNCiAgICAgICAgICBwYXNzd29yZDogdGhpcy5jaGFuZ2VQYXNzd29yZFRleHQsDQogICAgICAgICAgcGFzc3dvcmRDaGVjazogdGhpcy5jaGFuZ2VDaGVja1Bhc3N3b3JkVGV4dCwNCiAgICAgICAgICBvZmZpY2VJZDogdGhpcy5jaGFuZ2Vjb21wYW55VGV4dCwNCiAgICAgICAgICBlbWFpbDogdGhpcy5jaGFuZ2VFbWFpbFRleHQsDQogICAgICAgICAgcmVxdWVzdElkOiB0aGlzLnJlcXVlc3RJRA0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnN1YnNjcmliZSh0aGlzLnRvcGljICsgJy8nICsgdGhpcy5yZXF1ZXN0SUQsIHsgcW9zOiAyIH0sIChlcnJvciwgcmVzKSA9PiB7DQogICAgICAgICAgaWYgKGVycm9yKSB7IGNvbnNvbGUubG9nKCdlcnJvciA9ICcsIGVycm9yKSB9IGVsc2UgeyBjb25zb2xlLmxvZygncmVzID0gJywgcmVzKSB9DQogICAgICAgIH0pDQogICAgICAgIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0aW1vL3JlZ2lzdGVyL2Vycm9yLycgKyB0aGlzLnJlcXVlc3RJRCwgeyBxb3M6IDIgfSwgKGVycm9yLCByZXMpID0+IHsNCiAgICAgICAgICBpZiAoZXJyb3IpIHsgY29uc29sZS5sb2coJ2Vycm9yID0gJywgZXJyb3IpIH0gZWxzZSB7IGNvbnNvbGUubG9nKCdyZXMgPSAnLCByZXMpIH0NCiAgICAgICAgfSkNCiAgICAgICAgdGhpcy5tcXR0X2NsaWVudC5wdWJsaXNoKHRoaXMudG9waWMsIHBheWxvYWQsIHRoaXMucW9zKQ0KICAgICAgICBjb25zb2xlLmxvZygnbWVzc2FnZSBwdWJsaXNoZWQnKQ0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdSZWdpc3RlciBlcnJvciBwbGVhc2UgdHJ5IGFnYWluIGxhdGVyJw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AA0BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"background\">\r\n      <div class=\"warning\">\r\n      <p id=\"pop-up\">{{ this.unsuccessful }}</p>\r\n    </div>\r\n    <div class=\"card\" style=\"width: 25rem;\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Hello! Welcome to Dentistimo</h5>\r\n    <p class=\"card-text\">Enter your details below and click register.</p>\r\n  </div>\r\n  <ul class=\"list-group list-group-flush\">\r\n    <li class=\"list-group-item\"><input id=\"inputFirstName\" v-model='changeFirstNameText' placeholder=\"Enter your first name\"></li>\r\n    <li class=\"list-group-item\"><input id=\"inputLastName\" v-model='changeLastNameText' placeholder=\"Enter your last name\"></li>\r\n    <li class=\"list-group-item\"><input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"Enter new password\"></li>\r\n    <li class=\"list-group-item\"><input id=\"checkPassword\" v-model='changeCheckPasswordText' placeholder=\"Re-enter your password\"></li>\r\n    <li class=\"list-group-item\"><input id=\"inputCompany\" v-model='changecompanyText' placeholder=\"Enter company ID\"></li>\r\n    <li class=\"list-group-item\"><input id=\"inputeEmail\" v-model='changeEmailText' placeholder=\"Enter new email\"></li>\r\n  </ul>\r\n  <div class=\"card-body\">\r\n    <button id=\"registerButton\" @click=\"register\" class=\"btn btn-dark btn-lg\">Register</button>\r\n  </div>\r\n</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport checkingInputs from '../checkingInputs'\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '', // receives messages\r\n      requestID: '',\r\n      qos: 2,\r\n      topic: 'dentistimo/register/dentist',\r\n      changeFirstNameText: '',\r\n      changeLastNameText: '',\r\n      changePasswordText: '',\r\n      changeCheckPasswordText: '',\r\n      changecompanyText: '',\r\n      changeEmailText: '',\r\n      unsuccessful: '',\r\n      subscription: {\r\n        topic: 'test',\r\n        qos: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.unsuccessful = ''\r\n      this.receive = message.toString()\r\n      // console.log(topic)\r\n      console.log('message received' + message.toString())\r\n      if (topic.includes('dentistimo/register/error')) {\r\n        this.unsuccessful = this.receive\r\n      } else if (topic.includes('success')) {\r\n        console.log('success')\r\n        // this.$router.push('/login')\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n  },\r\n  methods: {\r\n    checkPassword() {\r\n      const result1 = checkingInputs.containsSpecialChars(this.changePasswordText)\r\n      const result2 = checkingInputs.strinContainsNumbers(this.changePasswordText)\r\n      const result3 = checkingInputs.checkStringLength(this.changePasswordText)\r\n      // console.log(result1, result2, result3)\r\n      if (result1 === false) {\r\n        this.unsuccessful = 'password needs a special character in enter new passworrd'\r\n        return false\r\n      } else if (result2 === false) {\r\n        this.unsuccessful = 'password needs a number in enter new passworrd'\r\n        return false\r\n      } else if (result3 === false) {\r\n        this.unsuccessful = 'password needs to be between 8 and 99 characters in enter new passworrd'\r\n        return false\r\n      } else {\r\n        this.unsuccessful = ''\r\n        return true\r\n      }\r\n    },\r\n    register() {\r\n      if (this.checkPassword() === false) {\r\n        // responses are in checkPassword()\r\n      } else if (checkingInputs.checkSameString(this.changePasswordText, this.changeCheckPasswordText) === false) {\r\n        this.unsuccessful = 'passwords are not the same'\r\n      } else if (this.changeFirstNameText === '') {\r\n        this.unsuccessful = 'first name is empty'\r\n      } else if (this.changeLastNameText === '') {\r\n        this.unsuccessful = 'last name is empty'\r\n      } else if (this.changecompanyText === '') {\r\n        this.unsuccessful = 'company is empty'\r\n      } else if (this.changeEmailText === '') {\r\n        this.unsuccessful = 'email is empty'\r\n      } else {\r\n        this.requestID = checkingInputs.makeRandomId(10)\r\n        const payload = JSON.stringify({\r\n          firstName: this.changeFirstNameText,\r\n          lastName: this.changeLastNameText,\r\n          password: this.changePasswordText,\r\n          passwordCheck: this.changeCheckPasswordText,\r\n          officeId: this.changecompanyText,\r\n          email: this.changeEmailText,\r\n          requestId: this.requestID\r\n        })\r\n        this.mqtt_client.subscribe(this.topic + '/' + this.requestID, { qos: 2 }, (error, res) => {\r\n          if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n        })\r\n        this.mqtt_client.subscribe('dentistimo/register/error/' + this.requestID, { qos: 2 }, (error, res) => {\r\n          if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n        })\r\n        this.mqtt_client.publish(this.topic, payload, this.qos)\r\n        console.log('message published')\r\n        this.unsuccessful = 'Register error please try again later'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.background {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #80BAB2;\r\n  min-width: 700px;\r\n  min-height: 900px;\r\n}\r\n.aboveButtons{\r\n  height: 550px\r\n}\r\n#pop-up {\r\n    color: red;\r\n    font-size: 20px;\r\n}\r\n#registerButton {\r\n    width: 100%;\r\n}\r\n</style>\r\n"]}]}