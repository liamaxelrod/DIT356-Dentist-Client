{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Register.vue","mtime":1672946480805},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1672853280885},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1672853290320}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgY2hlY2tpbmdJbnB1dHMgZnJvbSAnLi4vY2hlY2tpbmdJbnB1dHMnDQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtcXR0X2NsaWVudDogbnVsbCwNCiAgICAgIHJlY2VpdmU6ICcnLCAvLyByZWNlaXZlcyBtZXNzYWdlcw0KICAgICAgcmVxdWVzdElEOiAnJywNCiAgICAgIHFvczogMiwNCiAgICAgIHRvcGljOiAnZGVudGlzdGltby9yZWdpc3Rlci9kZW50aXN0JywNCiAgICAgIGNoYW5nZUZpcnN0TmFtZVRleHQ6ICcnLA0KICAgICAgY2hhbmdlTGFzdE5hbWVUZXh0OiAnJywNCiAgICAgIGNoYW5nZVBhc3N3b3JkVGV4dDogJycsDQogICAgICBjaGFuZ2VDaGVja1Bhc3N3b3JkVGV4dDogJycsDQogICAgICBjaGFuZ2Vjb21wYW55VGV4dDogJycsDQogICAgICBjaGFuZ2VFbWFpbFRleHQ6ICcnLA0KICAgICAgdW5zdWNjZXNzZnVsOiAnJywNCiAgICAgIHN1YnNjcmlwdGlvbjogew0KICAgICAgICB0b3BpYzogJ3Rlc3QnLA0KICAgICAgICBxb3M6IDANCiAgICAgIH0NCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5tcXR0X2NsaWVudCA9IG15bXF0dC5jcmVhdGVDbGllbnQoKQ0KICAgIGNvbnN0IG1zZ0NhbGxiYWNrID0gKHRvcGljLCBtZXNzYWdlKSA9PiB7DQogICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICcnDQogICAgICB0aGlzLnJlY2VpdmUgPSBtZXNzYWdlLnRvU3RyaW5nKCkNCiAgICAgIGNvbnNvbGUubG9nKHRvcGljKQ0KICAgICAgY29uc29sZS5sb2coJ21lc3NhZ2UgcmVjZWl2ZWQnICsgbWVzc2FnZS50b1N0cmluZygpKQ0KICAgICAgaWYgKHRvcGljLmluY2x1ZGVzKCdlcnJvcicpKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gdGhpcy5yZWNlaXZlDQogICAgICB9IGVsc2UgaWYgKG1lc3NhZ2UuaW5jbHVkZXModGhpcy5jaGFuZ2VFbWFpbFRleHQpKSB7DQogICAgICAgIGNvbnNvbGUubG9nKCdzdWNjZXNzJykNCiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9sb2dpbicpDQogICAgICB9DQogICAgICAvLyBjb25zb2xlLmxvZyh7IHRvcGljOiB0b3BpYywgbWVzc2FnZTogbWVzc2FnZS50b1N0cmluZygpIH0pDQogICAgfQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ21lc3NhZ2UnLCBtc2dDYWxsYmFjaykNCiAgICB0aGlzLm1xdHRfY2xpZW50Lm9uKCdzdWJzY3JpYmUnLCAodG9waWMpID0+IHsNCiAgICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpYmVkIHRvbzogJywgdG9waWMpDQogICAgfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGNoZWNrUGFzc3dvcmQoKSB7DQogICAgICBjb25zdCByZXN1bHQxID0gY2hlY2tpbmdJbnB1dHMuY29udGFpbnNTcGVjaWFsQ2hhcnModGhpcy5jaGFuZ2VQYXNzd29yZFRleHQpDQogICAgICBjb25zdCByZXN1bHQyID0gY2hlY2tpbmdJbnB1dHMuc3RyaW5Db250YWluc051bWJlcnModGhpcy5jaGFuZ2VQYXNzd29yZFRleHQpDQogICAgICBjb25zdCByZXN1bHQzID0gY2hlY2tpbmdJbnB1dHMuY2hlY2tTdHJpbmdMZW5ndGgodGhpcy5jaGFuZ2VQYXNzd29yZFRleHQpDQogICAgICAvLyBjb25zb2xlLmxvZyhyZXN1bHQxLCByZXN1bHQyLCByZXN1bHQzKQ0KICAgICAgaWYgKHJlc3VsdDEgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIGEgc3BlY2lhbCBjaGFyYWN0ZXIgaW4gZW50ZXIgbmV3IHBhc3N3b3JyZCcNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2UgaWYgKHJlc3VsdDIgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIGEgbnVtYmVyIGluIGVudGVyIG5ldyBwYXNzd29ycmQnDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIGlmIChyZXN1bHQzID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdwYXNzd29yZCBuZWVkcyB0byBiZSBiZXR3ZWVuIDggYW5kIDk5IGNoYXJhY3RlcnMgaW4gZW50ZXIgbmV3IHBhc3N3b3JyZCcNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICcnDQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9DQogICAgfSwNCiAgICByZWdpc3RlcigpIHsNCiAgICAgIGlmICh0aGlzLmNoZWNrUGFzc3dvcmQoKSA9PT0gZmFsc2UpIHsNCiAgICAgICAgLy8gcmVzcG9uc2VzIGFyZSBpbiBjaGVja1Bhc3N3b3JkKCkNCiAgICAgIH0gZWxzZSBpZiAoY2hlY2tpbmdJbnB1dHMuY2hlY2tTYW1lU3RyaW5nKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0LCB0aGlzLmNoYW5nZUNoZWNrUGFzc3dvcmRUZXh0KSA9PT0gZmFsc2UpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAncGFzc3dvcmRzIGFyZSBub3QgdGhlIHNhbWUnDQogICAgICB9IGVsc2UgaWYgKHRoaXMuY2hhbmdlRmlyc3ROYW1lVGV4dCA9PT0gJycpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAnZmlyc3QgbmFtZSBpcyBlbXB0eScNCiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGFuZ2VMYXN0TmFtZVRleHQgPT09ICcnKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2xhc3QgbmFtZSBpcyBlbXB0eScNCiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGFuZ2Vjb21wYW55VGV4dCA9PT0gJycpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAnY29tcGFueSBpcyBlbXB0eScNCiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGFuZ2VFbWFpbFRleHQgPT09ICcnKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2VtYWlsIGlzIGVtcHR5Jw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgdGhpcy5yZXF1ZXN0SUQgPSBjaGVja2luZ0lucHV0cy5tYWtlUmFuZG9tSWQoMTApDQogICAgICAgIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0aW1vL3JlZ2lzdGVyL2RlbnRpc3QvJyArIHRoaXMucmVxdWVzdElELCB7IHFvczogMiB9LCAoZXJyb3IsIHJlcykgPT4gew0KICAgICAgICAgIGlmIChlcnJvcikgeyBjb25zb2xlLmxvZygnZXJyb3IgPSAnLCBlcnJvcikgfSBlbHNlIHsgY29uc29sZS5sb2coJ3JlcyA9ICcsIHJlcykgfQ0KICAgICAgICB9KQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnN1YnNjcmliZSgnZGVudGlzdGltby9yZWdpc3Rlci9lcnJvci8nICsgdGhpcy5yZXF1ZXN0SUQsIHsgcW9zOiAyIH0sIChlcnJvciwgcmVzKSA9PiB7DQogICAgICAgICAgaWYgKGVycm9yKSB7IGNvbnNvbGUubG9nKCdlcnJvciA9ICcsIGVycm9yKSB9IGVsc2UgeyBjb25zb2xlLmxvZygncmVzID0gJywgcmVzKSB9DQogICAgICAgIH0pDQogICAgICAgIGNvbnN0IHBheWxvYWQgPSBKU09OLnN0cmluZ2lmeSh7DQogICAgICAgICAgZmlyc3ROYW1lOiB0aGlzLmNoYW5nZUZpcnN0TmFtZVRleHQsDQogICAgICAgICAgbGFzdE5hbWU6IHRoaXMuY2hhbmdlTGFzdE5hbWVUZXh0LA0KICAgICAgICAgIHBhc3N3b3JkOiB0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCwNCiAgICAgICAgICBwYXNzd29yZENoZWNrOiB0aGlzLmNoYW5nZUNoZWNrUGFzc3dvcmRUZXh0LA0KICAgICAgICAgIG9mZmljZUlkOiB0aGlzLmNoYW5nZWNvbXBhbnlUZXh0LA0KICAgICAgICAgIGVtYWlsOiB0aGlzLmNoYW5nZUVtYWlsVGV4dCwNCiAgICAgICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElEDQogICAgICAgIH0pDQogICAgICAgIHRoaXMubXF0dF9jbGllbnQucHVibGlzaCh0aGlzLnRvcGljLCBwYXlsb2FkLCB0aGlzLnFvcykNCiAgICAgICAgY29uc29sZS5sb2coJ21lc3NhZ2UgcHVibGlzaGVkJykNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSAncmVnaXN0ZXIgZXJyb3IgcGxlYXNlIHRyeSBhZ2FhaW4gbGF0ZXInDQogICAgICB9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Register.vue"],"names":[],"mappings":";AAwfile":"Register.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"background\">\r\n        <div class=\"warning\">\r\n          <p id=\"pop-up\" >{{this.unsuccessful}}</p>\r\n        </div>\r\n        <div class=\"aboveButtons\">\r\n            <input id=\"inputFirstName\" v-model='changeFirstNameText' placeholder=\"enter your first name\">\r\n            <P></P>\r\n            <input id=\"inputLastName\" v-model='changeLastNameText' placeholder=\"enter your last name\">\r\n            <P></P>\r\n            <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n            <P></P>\r\n            <input id=\"checkPassword\" v-model='changeCheckPasswordText' placeholder=\"reenter your password\">\r\n            <P></P>\r\n            <input id=\"inputCompany\" v-model='changecompanyText' placeholder=\"enter company ID number\">\r\n            <P></P>\r\n            <input id=\"inputeEmail\" v-model='changeEmailText' placeholder=\"enter new Email\">\r\n            <P></P>\r\n            <button id=\"registerButton\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport checkingInputs from '../checkingInputs'\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '', // receives messages\r\n      requestID: '',\r\n      qos: 2,\r\n      topic: 'dentistimo/register/dentist',\r\n      changeFirstNameText: '',\r\n      changeLastNameText: '',\r\n      changePasswordText: '',\r\n      changeCheckPasswordText: '',\r\n      changecompanyText: '',\r\n      changeEmailText: '',\r\n      unsuccessful: '',\r\n      subscription: {\r\n        topic: 'test',\r\n        qos: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.unsuccessful = ''\r\n      this.receive = message.toString()\r\n      console.log(topic)\r\n      console.log('message received' + message.toString())\r\n      if (topic.includes('error')) {\r\n        this.unsuccessful = this.receive\r\n      } else if (message.includes(this.changeEmailText)) {\r\n        console.log('success')\r\n        this.$router.push('/login')\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n  },\r\n  methods: {\r\n    checkPassword() {\r\n      const result1 = checkingInputs.containsSpecialChars(this.changePasswordText)\r\n      const result2 = checkingInputs.strinContainsNumbers(this.changePasswordText)\r\n      const result3 = checkingInputs.checkStringLength(this.changePasswordText)\r\n      // console.log(result1, result2, result3)\r\n      if (result1 === false) {\r\n        this.unsuccessful = 'password needs a special character in enter new passworrd'\r\n        return false\r\n      } else if (result2 === false) {\r\n        this.unsuccessful = 'password needs a number in enter new passworrd'\r\n        return false\r\n      } else if (result3 === false) {\r\n        this.unsuccessful = 'password needs to be between 8 and 99 characters in enter new passworrd'\r\n        return false\r\n      } else {\r\n        this.unsuccessful = ''\r\n        return true\r\n      }\r\n    },\r\n    register() {\r\n      if (this.checkPassword() === false) {\r\n        // responses are in checkPassword()\r\n      } else if (checkingInputs.checkSameString(this.changePasswordText, this.changeCheckPasswordText) === false) {\r\n        this.unsuccessful = 'passwords are not the same'\r\n      } else if (this.changeFirstNameText === '') {\r\n        this.unsuccessful = 'first name is empty'\r\n      } else if (this.changeLastNameText === '') {\r\n        this.unsuccessful = 'last name is empty'\r\n      } else if (this.changecompanyText === '') {\r\n        this.unsuccessful = 'company is empty'\r\n      } else if (this.changeEmailText === '') {\r\n        this.unsuccessful = 'email is empty'\r\n      } else {\r\n        this.requestID = checkingInputs.makeRandomId(10)\r\n        this.mqtt_client.subscribe('dentistimo/register/dentist/' + this.requestID, { qos: 2 }, (error, res) => {\r\n          if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n        })\r\n        this.mqtt_client.subscribe('dentistimo/register/error/' + this.requestID, { qos: 2 }, (error, res) => {\r\n          if (error) { console.log('error = ', error) } else { console.log('res = ', res) }\r\n        })\r\n        const payload = JSON.stringify({\r\n          firstName: this.changeFirstNameText,\r\n          lastName: this.changeLastNameText,\r\n          password: this.changePasswordText,\r\n          passwordCheck: this.changeCheckPasswordText,\r\n          officeId: this.changecompanyText,\r\n          email: this.changeEmailText,\r\n          requestId: this.requestID\r\n        })\r\n        this.mqtt_client.publish(this.topic, payload, this.qos)\r\n        console.log('message published')\r\n        this.unsuccessful = 'register error please try agaain later'\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.background {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #80BAB2;\r\n  min-width: 700px;\r\n  min-height: 600px;\r\n}\r\n.aboveButtons{\r\n  height: 550px\r\n}\r\n#pop-up {\r\n    color: red;\r\n    font-size: 20px;\r\n}\r\n#registerButton {\r\n    width: 100%;\r\n}\r\n</style>\r\n"]}]}