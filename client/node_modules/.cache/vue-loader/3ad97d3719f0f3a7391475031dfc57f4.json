{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Login.vue","mtime":1671567040714},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944875280},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1671566348756}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBtcXR0X2NsaWVudDogbnVsbCwNCiAgICAgIHJlY2VpdmU6ICcnLA0KICAgICAgcW9zOiAwLA0KICAgICAgdG9waWM6ICdkZW50aXN0L2NsaWVudC9sb2dpbicsDQogICAgICBjaGFuZ2VJRFRleHQ6ICcnLA0KICAgICAgY2hhbmdlUGFzc3dvcmRUZXh0OiAnJywNCiAgICAgIHVuc3VjY2Vzc2Z1bDogJycNCiAgICB9DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5tcXR0X2NsaWVudCA9IG15bXF0dC5jcmVhdGVDbGllbnQoKQ0KICAgIGNvbnN0IG1zZ0NhbGxiYWNrID0gKHRvcGljLCBtZXNzYWdlKSA9PiB7DQogICAgICB0aGlzLnJlY2VpdmUgPSBtZXNzYWdlLnRvU3RyaW5nKCkNCiAgICAgIGNvbnNvbGUubG9nKHsgdG9waWM6IHRvcGljLCBtZXNzYWdlOiBtZXNzYWdlLnRvU3RyaW5nKCkgfSkNCiAgICB9DQogICAgdGhpcy5tcXR0X2NsaWVudC5vbignbWVzc2FnZScsIG1zZ0NhbGxiYWNrKQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ3N1YnNjcmliZScsICh0b3BpYykgPT4gew0KICAgICAgY29uc29sZS5sb2coJ1N1YnNjcmliZWQgdG9vOiAnLCB0b3BpYykNCiAgICB9KQ0KICAgIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0L2NsaWVudC9sb2dpbicsIHsgcW9zOiAwIH0sIChlcnJvciwgcmVzKSA9PiB7DQogICAgICBpZiAoZXJyb3IpIHsNCiAgICAgICAgY29uc29sZS5sb2coJ2Vycm9yID0gJywgZXJyb3IpDQogICAgICB9IGVsc2Ugew0KICAgICAgICBjb25zb2xlLmxvZygncmVzID0gJywgcmVzKQ0KICAgICAgfQ0KICAgIH0pDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBjaGVja0lEKCkgew0KICAgICAgLyogYmxhbmsgZm9yIG5vdyAqLw0KICAgIH0sDQogICAgY2hlY2tQYXNzd29yZCgpIHsNCiAgICAgIC8qIGJsYW5rIGZvciBub3cgKi8NCiAgICB9LA0KICAgIGxvZ2luKCkgew0KICAgICAgY29uc3QgcGF5bG9hZCA9ICd7IklEIjogJyArIHRoaXMuY2hhbmdlSURUZXh0ICsgJywgInBhc3N3b3JkIjogJyArIHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0ICsgJyB9Jw0KICAgICAgdGhpcy5tcXR0X2NsaWVudC5wdWJsaXNoKHRoaXMudG9waWMsIHBheWxvYWQsIHRoaXMucW9zKQ0KICAgIH0sDQogICAgcmVnaXN0ZXIoKSB7DQogICAgICAvLyBub3Qgd29ya2luZw0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9yZWdpc3RlcicpDQogICAgfQ0KICB9DQp9DQoNCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"center\">\r\n        <div class=\"warning\">\r\n          <p id=\"pop-up\">{{this.unsuccessful}}</p>\r\n        </div>\r\n        <div class=\"inputAndButton\">\r\n            <input id=\"inputID\" v-model='changeIDText' placeholder=\"enter new ID\">\r\n            <P></P>\r\n            <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n            <P></P>\r\n            <button id=\"bittpnLogin\" @click=\"llogin\" class=\"btn btn-success btn-lg\">login</button>\r\n            <button id=\"bittpnRegister\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '',\r\n      qos: 0,\r\n      topic: 'dentist/client/login',\r\n      changeIDText: '',\r\n      changePasswordText: '',\r\n      unsuccessful: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentist/client/login', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  methods: {\r\n    checkID() {\r\n      /* blank for now */\r\n    },\r\n    checkPassword() {\r\n      /* blank for now */\r\n    },\r\n    login() {\r\n      const payload = '{\"ID\": ' + this.changeIDText + ', \"password\": ' + this.changePasswordText + ' }'\r\n      this.mqtt_client.publish(this.topic, payload, this.qos)\r\n    },\r\n    register() {\r\n      // not working\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #80BAB2;\r\n}\r\n#bittpnRegister {\r\n    display: inline-block;\r\n    margin: 10px;\r\n}\r\n</style>\r\n"]}]}