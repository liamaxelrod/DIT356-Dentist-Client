{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\App.vue","mtime":1671269817724},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1670944876648},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1670944884204},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1670944881773},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944875280},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1670944884203}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5pbWFnZSB7DQogIC8qIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9pMC53cC5jb20vdGhlZGVudGlzdHNkb3JyaWRnZS5jby51ay93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8xMS9iZV9hX2RlbmlzdC5qcGc/Zml0PTEwMjQlMkM2ODMmc3NsPTEnKTsgKi8NCn0NCiAgI2Zvb3RlciB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgYm90dG9tOiAwOw0KICB3aWR0aDogMTAwJTsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KfQ0KLyogYm9keSB7DQogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnaHR0cHM6Ly9pMC53cC5jb20vdGhlZGVudGlzdHNkb3JyaWRnZS5jby51ay93cC1jb250ZW50L3VwbG9hZHMvMjAxOS8xMS9iZV9hX2RlbmlzdC5qcGc/Zml0PTEwMjQlMkM2ODMmc3NsPTEnKTsNCn0gKi8NCg0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div id=\"app\">\r\n    <Logo_Dentistimo/>\r\n    <div>\r\n      <div class=\"NavigationBar\">\r\n        <b-navbar toggleable=\"lg\" type=\"dark\" variant=\"dark\">\r\n          <b-navbar-brand href=\"/\">Dentistimo</b-navbar-brand>\r\n          <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n          <b-collapse id=\"nav-collapse\" is-nav>\r\n            <b-navbar-nav>\r\n              <b-nav-item href=\"/appointments\">Appointments</b-nav-item>\r\n            </b-navbar-nav>\r\n            <b-navbar-nav class=\"ml-auto\">\r\n              <b-navbar-nav>\r\n                <!-- TODO! If logged in change to logout button instead -->\r\n                  <b-nav-item href=\"/login\">Login</b-nav-item>\r\n                  <b-nav-item href=\"/register\">register</b-nav-item>\r\n                </b-navbar-nav>\r\n              <b-nav-item-dropdown right>\r\n                <template #button-content>\r\n                  <em>User</em>\r\n                </template>\r\n                <b-dropdown-item href=\"/userProfile\">User Profile</b-dropdown-item>\r\n                <b-dropdown-item href=\"/\">Sign Out</b-dropdown-item>\r\n              </b-nav-item-dropdown>\r\n            </b-navbar-nav>\r\n          </b-collapse>\r\n        </b-navbar>\r\n      </div>\r\n      <div class=\"image\"><img src=\"https://i0.wp.com/thedentistsdorridge.co.uk/wp-content/uploads/2019/11/be_a_denist.jpg?fit=1024%2C683&ssl=1\" style=\"width: 100%\" /></div>\r\n    </div>\r\n    <router-view />\r\n  <div id=\"footer\">\r\n      <p class=\"copy\">Â© 2022 Dentistimo</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Logo from './components/Logo.vue'\r\nimport mqtt from 'mqtt'\r\nimport mymqtt from './mymqtt'\r\n\r\nexport default {\r\n  components: {\r\n    Logo_Dentistimo: Logo\r\n  },\r\n  data() {\r\n    return {\r\n      message: 'none',\r\n      connection: {\r\n        protocol: 'wss',\r\n        host: 'e33e41c289ad4ac69ae5ef60f456e9c3.s2.eu.hivemq.cloud',\r\n        port: 8884,\r\n        endpoint: '/mqtt',\r\n        keepalive: 60,\r\n        clean: true,\r\n        connectTimeout: 4000,\r\n        reconnectPeriod: 4000,\r\n        clientId: `mqtt_${Math.random().toString(16).slice(3)}`,\r\n        username: 'group6_dentistimo',\r\n        password: 'dentistimo123!'\r\n      },\r\n      subscription: {\r\n        topic: 'dentistimo/dentistClient/test',\r\n        qos: 0\r\n      },\r\n      publish: {\r\n        topic: 'dentistimo/dentistClient/test',\r\n        qos: 0,\r\n        payload: '{\"userid\": 6723, \"requestid\": 50981, \"dentistid\": 477612321726}'\r\n      },\r\n      receiveNews: '',\r\n      qosList: [0, 1, 2],\r\n      client: {\r\n        connected: false\r\n      },\r\n      subscribeSuccess: false,\r\n      connecting: false,\r\n      retryTimes: 0\r\n    }\r\n  },\r\n  mounted() {\r\n    mymqtt.createConnection()\r\n    // this.createConnection()\r\n    // this.doSubscribe()\r\n  },\r\n  methods: {\r\n    initData() {\r\n      this.client = {\r\n        connected: false\r\n      }\r\n      this.retryTimes = 0\r\n      this.connecting = false\r\n      this.subscribeSuccess = false\r\n    },\r\n    handleOnReConnect() {\r\n      this.retryTimes += 1\r\n      if (this.retryTimes > 5) {\r\n        try {\r\n          this.client.end()\r\n          this.initData()\r\n          this.$message.error('Connection maxReconnectTimes limit, stop retry')\r\n        } catch (error) {\r\n          // this.$message.error(error.toString())\r\n          console.log(error)\r\n        }\r\n      }\r\n    },\r\n    createConnection() {\r\n      try {\r\n        this.connecting = true\r\n        const { protocol, host, port, endpoint, ...options } = this.connection\r\n        const connectUrl = `${protocol}://${host}:${port}${endpoint}`\r\n        console.log(connectUrl)\r\n        this.client = mqtt.connect(connectUrl, options)\r\n        console.log(this.client)\r\n        if (this.client.on) {\r\n          this.client.on('connect', () => {\r\n            this.connecting = false\r\n            console.log('Connection succeeded!')\r\n          })\r\n          this.client.on('reconnect', this.handleOnReConnect)\r\n          this.client.on('error', (error) => {\r\n            console.log('Connection failed', error)\r\n          })\r\n          this.client.on('message', (topic, message) => {\r\n            this.receiveNews = message\r\n            console.log(`Received message ${message} from topic ${topic}`)\r\n          })\r\n        }\r\n      } catch (error) {\r\n        this.connecting = false\r\n        console.log('mqtt.connect error', error)\r\n      }\r\n      console.log('hello') // console.log says hello\r\n      console.log(this.client)\r\n    },\r\n    doSubscribe() {\r\n      const { topic, qos } = this.subscription\r\n      this.client.subscribe(topic, { qos }, (error, res) => {\r\n        if (error) {\r\n          console.log('Subscribe to topics error', error)\r\n          return\r\n        }\r\n        this.subscribeSuccess = true\r\n        console.log('Subscribe to topics res', res)\r\n      })\r\n    },\r\n    getClient() {\r\n      return this.client\r\n    },\r\n    doUnSubscribe() {\r\n      const { topic } = this.subscription\r\n      this.client.unsubscribe(topic, error => {\r\n        if (error) {\r\n          console.log('Unsubscribe error', error)\r\n        }\r\n      })\r\n    },\r\n    doPublish({ topic, qos, payload }) {\r\n      // const { topic, qos, payload } = this.publish\r\n      this.client.publish(topic, payload, { qos }, error => {\r\n        if (error) {\r\n          console.log('Publish error', error)\r\n        }\r\n      })\r\n    },\r\n    destroyConnection() {\r\n      if (this.client.connected) {\r\n        try {\r\n          this.client.end(false, () => {\r\n            this.initData()\r\n            console.log('Successfully disconnected!')\r\n          })\r\n        } catch (error) {\r\n          console.log('Disconnect failed', error.toString())\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.image {\r\n  /* background-image: url('https://i0.wp.com/thedentistsdorridge.co.uk/wp-content/uploads/2019/11/be_a_denist.jpg?fit=1024%2C683&ssl=1'); */\r\n}\r\n  #footer {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  text-align: center;\r\n}\r\n/* body {\r\n  background-image: url('https://i0.wp.com/thedentistsdorridge.co.uk/wp-content/uploads/2019/11/be_a_denist.jpg?fit=1024%2C683&ssl=1');\r\n} */\r\n\r\n</style>\r\n"]}]}