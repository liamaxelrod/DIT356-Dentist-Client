{"remainingRequest":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Login.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\src\\views\\Login.vue","mtime":1671728550698},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1671718563379},{"path":"C:\\Users\\Liam's PC\\Desktop\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgbXltcXR0IGZyb20gJy4uL215bXF0dCcNCg0KY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJykNCnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgbXF0dF9jbGllbnQ6IG51bGwsDQogICAgICByZWNlaXZlOiAnJywNCiAgICAgIHJlcXVlc3RJRDogJycsDQogICAgICBxb3M6IDAsDQogICAgICB0b3BpYzogJ2RlbnRpc3RpbW8vbG9naW4nLA0KICAgICAgY2hhbmdlRW1haWxUZXh0OiAnJywNCiAgICAgIGNoYW5nZVBhc3N3b3JkVGV4dDogJycsDQogICAgICB1bnN1Y2Nlc3NmdWw6ICcnDQogICAgfQ0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMubXF0dF9jbGllbnQgPSBteW1xdHQuY3JlYXRlQ2xpZW50KCkNCiAgICBjb25zdCBtc2dDYWxsYmFjayA9ICh0b3BpYywgbWVzc2FnZSkgPT4gew0KICAgICAgdGhpcy5yZWNlaXZlID0gbWVzc2FnZS50b1N0cmluZygpDQogICAgICBpZiAodG9waWMuaW5jbHVkZXMoJ2Vycm9yJykpIHsNCiAgICAgICAgdGhpcy51bnN1Y2Nlc3NmdWwgPSB0aGlzLnJlY2VpdmUNCiAgICAgICAgY29uc29sZS5sb2coJ2ZhaWx1cmUnKQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3MnKQ0KICAgICAgICBjb24NCiAgICAgICAgY29uc3QgeyBJZFRva2VuIH0gPSBKU09OLnBhcnNlKHRoaXMucmVjZWl2ZS50b1N0cmluZygpKQ0KICAgICAgICBjb25zb2xlLmxvZyhJZFRva2VuKQ0KICAgICAgICBjb25zdCBkZWNvb2RlZCA9IGp3dC52ZXJpZnkoSWRUb2tlbiwgJzU1NTJlOWUwNzUwM2IzODIyMDU0N2M2NTM5MjlmMWY3ZjQwMGQyZGVjNDYxOTcxNTZiNGU5MjA0Mjg0Y2FkNGYnKQ0KICAgICAgICAvLyBqd3QudmVyaWZ5KElkVG9rZW4sICc1NTUyZTllMDc1MDNiMzgyMjA1NDdjNjUzOTI5ZjFmN2Y0MDBkMmRlYzQ2MTk3MTU2YjRlOTIwNDI4NGNhZDRmJywgZnVuY3Rpb24gKGVyciwgZGVjb2RlZCkgew0KICAgICAgICAvLyAgIGNvbnNvbGUubG9nKGRlY29kZWQpDQogICAgICAgIC8vICAgY29uc29sZS5sb2coZXJyKQ0KICAgICAgICAvLyB9KQ0KICAgICAgICBjb25zb2xlLmxvZyhkZWNvb2RlZCkNCiAgICAgIH0NCiAgICAgIC8vIGNvbnNvbGUubG9nKHsgdG9waWM6IHRvcGljLCBtZXNzYWdlOiBtZXNzYWdlLnRvU3RyaW5nKCkgfSkNCiAgICB9DQogICAgdGhpcy5tcXR0X2NsaWVudC5vbignbWVzc2FnZScsIG1zZ0NhbGxiYWNrKQ0KICAgIHRoaXMubXF0dF9jbGllbnQub24oJ3N1YnNjcmliZScsICh0b3BpYykgPT4gew0KICAgICAgY29uc29sZS5sb2coJ1N1YnNjcmliZWQgdG9vOiAnLCB0b3BpYykNCiAgICB9KQ0KICAgIC8vIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0aW1vL2xvZ2luJywgeyBxb3M6IDAgfSwgKGVycm9yLCByZXMpID0+IHsNCiAgICAvLyAgIGlmIChlcnJvcikgew0KICAgIC8vICAgICBjb25zb2xlLmxvZygnZXJyb3IgPSAnLCBlcnJvcikNCiAgICAvLyAgIH0gZWxzZSB7DQogICAgLy8gICAgIGNvbnNvbGUubG9nKCdyZXMgPSAnLCByZXMpDQogICAgLy8gICB9DQogICAgLy8gfSkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIG1ha2VpZChuKSB7DQogICAgICBsZXQgdGV4dCA9ICcnDQogICAgICBjb25zdCBwb3NzaWJsZSA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OScNCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbjsgaSsrKSB7DQogICAgICAgIHRleHQgKz0gcG9zc2libGUuY2hhckF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlLmxlbmd0aCkpDQogICAgICB9DQogICAgICByZXR1cm4gdGV4dA0KICAgIH0sDQogICAgY29udGFpbnNTcGVjaWFsQ2hhcnMoc3RyKSB7DQogICAgICBjb25zdCBzcGVjaWFsQ2hhcnMgPSAnW2AhQCMkJV4mKigpXystPVtde307XCc6IlxcfCwuPD4vP35dLycNCiAgICAgIHJldHVybiBzcGVjaWFsQ2hhcnMuc3BsaXQoJycpDQogICAgICAgIC5zb21lKChzcGVjaWFsQ2hhcikgPT4gc3RyLmluY2x1ZGVzKHNwZWNpYWxDaGFyKSkNCiAgICB9LA0KICAgIGNvbnRhaW5zTnVtYmVycyhzdHIpIHsNCiAgICAgIGNvbnN0IHNwZWNpYWxDaGFycyA9ICcxMjM0NTY3ODkwJw0KICAgICAgcmV0dXJuIHNwZWNpYWxDaGFycy5zcGxpdCgnJykNCiAgICAgICAgLnNvbWUoKHNwZWNpYWxDaGFyKSA9PiBzdHIuaW5jbHVkZXMoc3BlY2lhbENoYXIpKQ0KICAgIH0sDQogICAgY2hlY2tTdHJpbmdMZW5ndGgoc3RyKSB7DQogICAgICBpZiAoc3RyLmxlbmd0aCA+PSA4ICYmIHN0ci5sZW5ndGggPD0gMTYpIHsNCiAgICAgICAgcmV0dXJuIHRydWUNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfQ0KICAgIH0sDQogICAgY2hlY2tFbWFpbChzdHJpbmcpIHsNCiAgICAgIGNvbnN0IGNvbmRpdGlvbiA9IHN0cmluZy5pbmNsdWRlcygnQCcpDQogICAgICBpZiAoY29uZGl0aW9uKSB7DQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgIH0NCiAgICB9LA0KICAgIGNoZWNrUGFzc3dvcmQoKSB7DQogICAgICBjb25zdCByZXN1bHQxID0gdGhpcy5jb250YWluc1NwZWNpYWxDaGFycyh0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCkNCiAgICAgIGNvbnN0IHJlc3VsdDIgPSB0aGlzLmNvbnRhaW5zTnVtYmVycyh0aGlzLmNoYW5nZVBhc3N3b3JkVGV4dCkNCiAgICAgIGNvbnN0IHJlc3VsdDMgPSB0aGlzLmNoZWNrU3RyaW5nTGVuZ3RoKHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0KQ0KICAgICAgaWYgKHJlc3VsdDEgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIGEgc3BlY2lhbCBjaGFyYWN0ZXInDQogICAgICAgIHJldHVybiBmYWxzZQ0KICAgICAgfSBlbHNlIGlmIChyZXN1bHQyID09PSBmYWxzZSkgew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICdwYXNzd29yZCBuZWVkcyBhIG51bWJlcicNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2UgaWYgKHJlc3VsdDMgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ3Bhc3N3b3JkIG5lZWRzIHRvIGJlIGJldHdlZW4gOCBhbmQgMTYgY2hhcmFjdGVycycNCiAgICAgICAgcmV0dXJuIGZhbHNlDQogICAgICB9IGVsc2Ugew0KICAgICAgICB0aGlzLnVuc3VjY2Vzc2Z1bCA9ICcnDQogICAgICAgIHJldHVybiB0cnVlDQogICAgICB9DQogICAgfSwNCiAgICBsb2dpbigpIHsNCiAgICAgIGNvbnN0IGNoZWNrID0gdGhpcy5jaGVja1Bhc3N3b3JkKCkNCiAgICAgIGNvbnN0IGNoZWNrMiA9IHRoaXMuY2hlY2tFbWFpbCh0aGlzLmNoYW5nZUVtYWlsVGV4dCkNCiAgICAgIGlmIChjaGVjazIgPT09IGZhbHNlKSB7DQogICAgICAgIHRoaXMudW5zdWNjZXNzZnVsID0gJ2VtYWlsIG5lZWRzIHRvIGNvbnRhaW4gQCcNCiAgICAgIH0gZWxzZSBpZiAoY2hlY2sgPT09IGZhbHNlKSB7DQogICAgICAgIC8vIHJlc3BvbnNlcyBpbiBjaGVja1Bhc3N3b3JkKCkNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHRoaXMucmVxdWVzdElEID0gdGhpcy5tYWtlaWQoMTApDQogICAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMucmVxdWVzdElEKQ0KICAgICAgICB0aGlzLm1xdHRfY2xpZW50LnN1YnNjcmliZSgnZGVudGlzdGltby9sb2dpbi8nICsgdGhpcy5yZXF1ZXN0SUQsIHsgcW9zOiAwIH0sIChlcnJvciwgcmVzKSA9PiB7DQogICAgICAgICAgaWYgKGVycm9yKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZygnZXJyb3IgPSAnLCBlcnJvcikNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICAgIHRoaXMubXF0dF9jbGllbnQuc3Vic2NyaWJlKCdkZW50aXN0aW1vL2xvZ2luL2Vycm9yLycgKyB0aGlzLnJlcXVlc3RJRCwgeyBxb3M6IDAgfSwgKGVycm9yLCByZXMpID0+IHsNCiAgICAgICAgICBpZiAoZXJyb3IpIHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlcnJvciA9ICcsIGVycm9yKQ0KICAgICAgICAgIH0NCiAgICAgICAgfSkNCiAgICAgICAgY29uc3QgcGF5bG9hZCA9IEpTT04uc3RyaW5naWZ5KHsNCiAgICAgICAgICBlbWFpbDogdGhpcy5jaGFuZ2VFbWFpbFRleHQsDQogICAgICAgICAgcGFzc3dvcmQ6IHRoaXMuY2hhbmdlUGFzc3dvcmRUZXh0LA0KICAgICAgICAgIHJlcXVlc3RJZDogdGhpcy5yZXF1ZXN0SUQNCiAgICAgICAgfSkNCiAgICAgICAgdGhpcy5tcXR0X2NsaWVudC5wdWJsaXNoKHRoaXMudG9waWMsIHBheWxvYWQsIHRoaXMucW9zKQ0KICAgICAgfQ0KICAgIH0sDQogICAgcmVnaXN0ZXIoKSB7DQogICAgICAvLyBub3Qgd29ya2luZw0KICAgICAgdGhpcy4kcm91dGVyLnB1c2goJy9yZWdpc3RlcicpDQogICAgfQ0KICB9DQp9DQoNCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAifile":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"center\">\r\n    <div class=\"warning\">\r\n      <p id=\"pop-up\">{{ this.unsuccessful }}</p>\r\n    </div>\r\n    <div class=\"inputAndButton\">\r\n      <input id=\"inputEmail\" v-model='changeEmailText' placeholder=\"enter new email\">\r\n      <P></P>\r\n      <input id=\"inputpassword\" v-model='changePasswordText' placeholder=\"enter new password\">\r\n      <P></P>\r\n      <button id=\"bittpnLogin\" @click=\"login\" class=\"btn btn-success btn-lg\">login</button>\r\n      <button id=\"bittpnRegister\" @click=\"register\" class=\"btn btn-success btn-lg\">register</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport mymqtt from '../mymqtt'\r\n\r\nconst jwt = require('jsonwebtoken')\r\nrequire('dotenv').config()\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      receive: '',\r\n      requestID: '',\r\n      qos: 0,\r\n      topic: 'dentistimo/login',\r\n      changeEmailText: '',\r\n      changePasswordText: '',\r\n      unsuccessful: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      if (topic.includes('error')) {\r\n        this.unsuccessful = this.receive\r\n        console.log('failure')\r\n      } else {\r\n        console.log('success')\r\n        con\r\n        const { IdToken } = JSON.parse(this.receive.toString())\r\n        console.log(IdToken)\r\n        const decooded = jwt.verify(IdToken, '5552e9e07503b38220547c653929f1f7f400d2dec46197156b4e9204284cad4f')\r\n        // jwt.verify(IdToken, '5552e9e07503b38220547c653929f1f7f400d2dec46197156b4e9204284cad4f', function (err, decoded) {\r\n        //   console.log(decoded)\r\n        //   console.log(err)\r\n        // })\r\n        console.log(decooded)\r\n      }\r\n      // console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    // this.mqtt_client.subscribe('dentistimo/login', { qos: 0 }, (error, res) => {\r\n    //   if (error) {\r\n    //     console.log('error = ', error)\r\n    //   } else {\r\n    //     console.log('res = ', res)\r\n    //   }\r\n    // })\r\n  },\r\n  methods: {\r\n    makeid(n) {\r\n      let text = ''\r\n      const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n      for (let i = 0; i < n; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n      }\r\n      return text\r\n    },\r\n    containsSpecialChars(str) {\r\n      const specialChars = '[`!@#$%^&*()_+-=[]{};\\':\"\\\\|,.<>/?~]/'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    containsNumbers(str) {\r\n      const specialChars = '1234567890'\r\n      return specialChars.split('')\r\n        .some((specialChar) => str.includes(specialChar))\r\n    },\r\n    checkStringLength(str) {\r\n      if (str.length >= 8 && str.length <= 16) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkEmail(string) {\r\n      const condition = string.includes('@')\r\n      if (condition) {\r\n        return true\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    checkPassword() {\r\n      const result1 = this.containsSpecialChars(this.changePasswordText)\r\n      const result2 = this.containsNumbers(this.changePasswordText)\r\n      const result3 = this.checkStringLength(this.changePasswordText)\r\n      if (result1 === false) {\r\n        this.unsuccessful = 'password needs a special character'\r\n        return false\r\n      } else if (result2 === false) {\r\n        this.unsuccessful = 'password needs a number'\r\n        return false\r\n      } else if (result3 === false) {\r\n        this.unsuccessful = 'password needs to be between 8 and 16 characters'\r\n        return false\r\n      } else {\r\n        this.unsuccessful = ''\r\n        return true\r\n      }\r\n    },\r\n    login() {\r\n      const check = this.checkPassword()\r\n      const check2 = this.checkEmail(this.changeEmailText)\r\n      if (check2 === false) {\r\n        this.unsuccessful = 'email needs to contain @'\r\n      } else if (check === false) {\r\n        // responses in checkPassword()\r\n      } else {\r\n        this.requestID = this.makeid(10)\r\n        // console.log(this.requestID)\r\n        this.mqtt_client.subscribe('dentistimo/login/' + this.requestID, { qos: 0 }, (error, res) => {\r\n          if (error) {\r\n            console.log('error = ', error)\r\n          }\r\n        })\r\n        this.mqtt_client.subscribe('dentistimo/login/error/' + this.requestID, { qos: 0 }, (error, res) => {\r\n          if (error) {\r\n            console.log('error = ', error)\r\n          }\r\n        })\r\n        const payload = JSON.stringify({\r\n          email: this.changeEmailText,\r\n          password: this.changePasswordText,\r\n          requestId: this.requestID\r\n        })\r\n        this.mqtt_client.publish(this.topic, payload, this.qos)\r\n      }\r\n    },\r\n    register() {\r\n      // not working\r\n      this.$router.push('/register')\r\n    }\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n.center {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  background-color: #80BAB2;\r\n}\r\n\r\n#bittpnRegister {\r\n  display: inline-block;\r\n  margin: 10px;\r\n}\r\n</style>\r\n"]}]}