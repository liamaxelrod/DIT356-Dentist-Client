{"remainingRequest":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\src\\views\\Appointments.vue?vue&type=style&index=0&id=45b08fee&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\src\\views\\Appointments.vue","mtime":1671557968751},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1670944962798},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1671448801982},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1670944970502},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944960953},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1671448801980}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKg0KQ2hhbmdlIHNvIGl0IGNvdmVycyAxMDAlIG5vdCBQWA0KKi8NCi5iYWNrZ3JvdW5kew0KDQogIGhlaWdodDogNTc1cHg7DQogIGJhY2tncm91bmQtY29sb3I6IzgwQkFCMg0KfQ0KDQo="},{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";AA2EA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Appointments.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class =\"background\">\r\n    <div>\r\n      <b-button class=\"btn_message\" variant=\"primary\" @click=\"appointments\" >Get all appointments</b-button>\r\n      <p onchange=\"myFunction\" >| {{this.receive}} |</p>\r\n      <!-- https://bootstrap-vue.org/docs/components/calendar#comp-ref-b-calendar-props -->\r\n      <b-row>\r\n    <b-col md=\"auto\">\r\n      <b-calendar v-model=\"value\" @context=\"onContext\" locale=\"en-EU\"></b-calendar>\r\n    </b-col>\r\n    <b-col>\r\n      <p>Value: <b>'{{ value }}'</b></p>\r\n      <p class=\"mb-0\">Context:</p>\r\n      <pre class=\"small\">{{ context }}</pre>\r\n    </b-col>\r\n  </b-row>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      value: '',\r\n      receive: '',\r\n      context: '',\r\n      news: 'none',\r\n      subscription: {\r\n        topic: 'dentistimo/dentist-appointment/all-appointments',\r\n        qos: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      this.context = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/dentist-appointment/all-appointments', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  /*\r\nFetching the appointments of dentistid \"xxxx\". Next step is to incoprate it so it knows what dentist is logged in and uses that dentist\r\n  */\r\n  methods: {\r\n    appointments() {\r\n      const payload = '{ \"dentistid\": 687181763 + \"date\"  ' + this.value + ''\r\n      const topic = 'dentistimo/dentist-appointment/get-all-appointments'\r\n      const qos = 0\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    myFunction() {\r\n      console.log('do something')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*\r\nChange so it covers 100% not PX\r\n*/\r\n.background{\r\n\r\n  height: 575px;\r\n  background-color:#80BAB2\r\n}\r\n\r\n</style>\r\n"]}]}