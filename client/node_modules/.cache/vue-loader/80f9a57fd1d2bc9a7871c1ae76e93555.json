{"remainingRequest":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\src\\views\\Appointments.vue?vue&type=style&index=0&id=45b08fee&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\src\\views\\Appointments.vue","mtime":1672151744719},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1670944962798},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1671448801982},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":1670944970502},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1670944960953},{"path":"C:\\Users\\adrianbigcack\\Desktop\\mini\\dentist-client\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":1671448801980}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKg0KQ2hhbmdlIHNvIGl0IGNvdmVycyAxMDAlIG5vdCBQWA0KKi8NCi5iYWNrZ3JvdW5kIHsNCiAgZGlzcGxheTogZmxleDsNCiAgaGVpZ2h0OiAxMDAlOw0KICAvKiBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgKi8NCiAgYmFja2dyb3VuZC1jb2xvcjojODBCQUIyDQp9DQouZGl2MSB7DQogIGZsb2F0OnJpZ2h0Ow0KfQ0KLmRpdjIgew0KICBmbG9hdDpsZWZ0Ow0KfQ0KdGV4dGFyZWEgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiM4MEJBQjI7DQp9DQoNCg=="},{"version":3,"sources":["Appointments.vue"],"names":[],"mappings":";AA8FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Appointments.vue","sourceRoot":"src/views","sourcesContent":["<template class=\"test\">\r\n  <div class =\"background\">\r\n    <div class=\"div1\">\r\n      <!-- https://bootstrap-vue.org/docs/components/calendar#comp-ref-b-calendar-props -->\r\n      <b-row>\r\n    <b-col md=\"auto\">\r\n      <!-- ADD INFORMATION IF THERE IS NO APPOINTMENT THAT DAY -->\r\n      <b-calendar v-model=\"value\" locale=\"en-EU\"></b-calendar>\r\n    </b-col>\r\n    <b-col>\r\n      <p>Value: <b>'{{ value }}'</b></p>\r\n    </b-col>\r\n  </b-row>\r\n  <p onchange=\"myFunction\" >| {{this.receive}} |</p>\r\n  <b class=\"btn btn-dark\" @click=\"appointments\" style= \"width: 17rem;\">Get appointments</b>\r\n  <div class=\"card border-info mb-3\" style=\"width: 17rem;\">\r\n  <div class=\"card-header text-info\">\r\n    Appointment information </div>\r\n  <ul class=\"list-group list-group-flush text-info\">\r\n    <li class=\"list-group-item\">Client ID</li>\r\n    <li class=\"list-group-item\">Date</li>\r\n    <li class=\"list-group-item\">Time</li>\r\n  </ul>\r\n</div>\r\n<div class=\"card border-danger mb-3\" style=\"width: 17rem;\">\r\n  <div class=\"card-header text-danger\">\r\n    Cancel Appointment </div>\r\n  <ul class=\"list-group list-group-flush text-info\">\r\n    <input id=\"inputDate\" v-model=\"cancelDate\" placeholder=\"Date of appointment YYYY-MM-DD\"/>\r\n    <input v-model=\"cancelTime\" placeholder=\"Time of appointment 00:00\"/>\r\n  </ul>\r\n</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport mymqtt from '../mymqtt'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      mqtt_client: null,\r\n      value: '',\r\n      receive: '',\r\n      context: '',\r\n      news: 'none',\r\n      subscription: {\r\n        topic: 'dentistimo/dentist-appointment/all-appointments-day',\r\n        qos: 0\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.mqtt_client = mymqtt.createClient()\r\n    const msgCallback = (topic, message) => {\r\n      this.receive = message.toString()\r\n      this.context = message.toString()\r\n      console.log({ topic: topic, message: message.toString() })\r\n    }\r\n    this.mqtt_client.on('message', msgCallback)\r\n    this.mqtt_client.on('subscribe', (topic) => {\r\n      console.log('Subscribed too: ', topic)\r\n    })\r\n    this.mqtt_client.subscribe('dentistimo/dentist-appointment/all-appointments-day', { qos: 0 }, (error, res) => {\r\n      if (error) {\r\n        console.log('error = ', error)\r\n      } else {\r\n        console.log('res = ', res)\r\n      }\r\n    })\r\n  },\r\n  /*\r\nFetching the appointments of dentistid \"xxxx\". Next step is to incoprate it so it knows what dentist is logged in and uses that dentist\r\n  */\r\n  methods: {\r\n    appointments() {\r\n      const payload = JSON.stringify({\r\n        dentistid: 2,\r\n        date: this.value\r\n      })\r\n      const topic = 'dentistimo/dentist-appointment/get-all-appointments-day'\r\n      const qos = 0\r\n      this.mqtt_client.publish(topic, payload, qos)\r\n    },\r\n    myFunction() {\r\n      console.log('do something')\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/*\r\nChange so it covers 100% not PX\r\n*/\r\n.background {\r\n  display: flex;\r\n  height: 100%;\r\n  /* justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column; */\r\n  background-color:#80BAB2\r\n}\r\n.div1 {\r\n  float:right;\r\n}\r\n.div2 {\r\n  float:left;\r\n}\r\ntextarea {\r\n  background-color:#80BAB2;\r\n}\r\n\r\n</style>\r\n"]}]}